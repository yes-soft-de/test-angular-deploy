{"version":3,"sources":["./src/app/pages/admins/admins-routing.module.ts","./src/app/pages/admins/admins.module.ts","./src/app/pages/admins/components/all-admins/all-admins.component.ts","./src/app/pages/admins/components/all-admins/all-admins.component.html","./src/app/pages/admins/components/new-admin/new-admin.component.ts","./src/app/pages/admins/components/new-admin/new-admin.component.html","./src/app/pages/admins/services/admins.service.ts","./src/app/pages/admins/store/admin.actions.ts","./src/app/pages/admins/store/admin.effects.ts","./src/app/pages/admins/store/admin.reducer.ts","./src/app/pages/admins/store/admin.selector.ts"],"names":[],"mappings":"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","file":"admins-admins-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {AllAdminsComponent} from './components/all-admins/all-admins.component';\nimport {NewAdminComponent} from './components/new-admin/new-admin.component';\n\n\nconst routes: Routes = [\n  { path: '', component: AllAdminsComponent },\n  { path: 'add', component: NewAdminComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AdminsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AdminsRoutingModule } from './admins-routing.module';\nimport { AllAdminsComponent } from './components/all-admins/all-admins.component';\nimport { NewAdminComponent } from './components/new-admin/new-admin.component';\nimport { StoreModule } from '@ngrx/store';\nimport * as fromAdmin from './store/admin.reducer';\nimport { EffectsModule } from '@ngrx/effects';\nimport { AdminEffects } from './store/admin.effects';\nimport {ThemeModule} from '../../@theme/theme.module';\n\n\n@NgModule({\n  declarations: [AllAdminsComponent, NewAdminComponent],\n  imports: [\n    ThemeModule,\n    AdminsRoutingModule,\n    StoreModule.forFeature(fromAdmin.adminsFeatureKey, fromAdmin.reducer),\n    EffectsModule.forFeature([AdminEffects])\n  ]\n})\nexport class AdminsModule { }\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Events} from '../../../events/model/event.model';\nimport {Subscription} from 'rxjs';\nimport {select, Store} from '@ngrx/store';\nimport {EventState} from '../../../events/store/event.reducer';\nimport * as adminActions from '../../store/admin.actions';\nimport {getAllEventsSelector} from '../../../events/store/event.selector';\nimport {Admin} from '../../model/admin.model';\nimport {getAdminErrorSelector, getAllAdminsSelector} from '../../store/admin.selector';\nimport {AdminState} from '../../store/admin.reducer';\n\n@Component({\n  selector: 'app-all-admins',\n  templateUrl: './all-admins.component.html',\n  styleUrls: ['./all-admins.component.scss']\n})\nexport class AllAdminsComponent implements OnInit, OnDestroy {\n  admins: Admin[];\n  adminsList: Admin[] = [];\n  name: any;\n  config: any;\n  isDeleted: boolean;\n  adminsSubscription: Subscription;\n\n  constructor(private store: Store<AdminState>) { }\n\n  ngOnInit(): void {\n    this.store.dispatch(adminActions.loadAdmins());\n    this.getAllAdmins();\n    this.store.select(getAdminErrorSelector).subscribe(error => console.log('error : ', error));\n  }\n\n  getAllAdmins() {\n    this.adminsSubscription = this.store.select(getAllAdminsSelector).subscribe(\n      data => {\n        console.log('components data : ', data);\n        this.admins = data;\n        this.adminsList = data;\n        this.config = {\n          itemsPerPage: 5,\n          currentPage: 1,\n          totalItems: this.adminsList.length\n        };\n      }\n    );\n\n  }\n\n  // Fetch The Page Number On Page Change\n  pageChanged(event) {\n    this.config.currentPage = event;\n  }\n\n  delete(userID: string) {\n    if (confirm('Are you sure you want to delete this admin ?')) {\n      this.store.dispatch(adminActions.deleteAdmin({userID}));\n    }\n  }\n\n  applyFilter() {\n    // if the search input value is empty\n    if (!this.name) {\n      this.adminsList = [...this.admins];\n    } else {\n      this.adminsList = [];\n      this.adminsList = this.admins.filter(res => {\n        if (res.name) {\n          const name = res.name.toLocaleLowerCase().match(this.name.toLocaleLowerCase());\n          if (name) {\n            return name;\n          }\n        }\n        if (res.email) {\n          const email = res.email.toLocaleLowerCase().match(this.name.toLocaleLowerCase());\n          if (email) {\n            return email;\n          }\n        }\n        if (res.phoneNumber) {\n          const phoneNumber = res.phoneNumber.toString().toLocaleLowerCase().match(this.name.toLocaleLowerCase());\n          if (phoneNumber) {\n            return phoneNumber;\n          }\n        }\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.adminsSubscription) {\n      this.adminsSubscription.unsubscribe();\n    }\n  }\n\n\n}\n","<div *ngIf=\"admins.length != 0\">\n  <!-- <div *ngIf=\"regionsList.length !== 0\"> -->\n  <!-- <div class=\"container-fluid\"> -->\n  <h1 class=\"text-center details-title my-4\">{{'manage-admins-page' | translate}}</h1>\n  <div class=\"row\">\n    <div class=\"col-10 col-sm-8 col-md-6 col-xl-4\">\n      <div class=\"form-group mb-4\">\n        <input\n          id=\"exampleFormControlInput2\"\n          [(ngModel)]=\"name\"\n          (keyup)=\"applyFilter()\"\n          type=\"text\"\n          placeholder=\"{{'admins-search-input' | translate}}\"\n          title=\"{{'admins-search-input' | translate}}\"\n          class=\"form-control form-control-underlined border-primary search-input\">\n      </div>\n    </div>\n    <!-- <div class=\"col-5 col-md-6 col-xl-8 align-self-center\">\n      <a class=\"btn btn-primary btn-sm mb-2 float-right\" routerLink=\"/regions/add\">\n        <i class=\"fa fa-plus\"></i>\n        {{'new-region' | translate}}\n      </a>\n    </div> -->\n  </div>\n  <div class=\"table-responsive text-center\">\n    <table class=\"table table-bordered main-table\">\n      <tr class=\"bg-dark text-white\">\n        <td>{{'image' | translate}}</td>\n        <td>{{'name' | translate}}</td>\n        <td>{{'email' | translate}}</td>\n<!--        <td>{{'phone-number' | translate}}</td>-->\n        <td>{{'create-date' | translate}}</td>\n        <td>{{'control' | translate}}</td>\n      </tr>\n      <tr *ngFor=\"let admin of adminsList | paginate: config\">\n        <td><img src=\"{{admin?.image}}\" alt=\"{{admin?.name}} Image\" class=\"img-thumbnail img-custom\"></td>\n        <td>{{admin?.name ? admin?.name : '-'}}</td>\n        <td>{{admin?.email ? admin?.email : '-'}}</td>\n<!--        <td>{{admin?.phoneNumber ? admin?.phoneNumber : '-'}}</td>-->\n        <td>{{admin?.createDate ? (admin?.createDate?.timestamp * 1000 | date: 'yyyy-MM-dd') : '-'}}</td>\n        <td>\n          <a (click)=\"delete(admin?.userID)\" class=\"btn btn-danger confirm btn-sm mr-1 mb-1 {{isDeleted ? 'disabled' : ''}}\">\n            {{'delete' | translate}}\n          </a>\n        </td>\n      </tr>\n    </table>\n    <pagination-controls class=\"my-pagination\"\n                         (pageChange)=\"pageChanged($event)\"\n                         autoHide=\"true\"\n                         maxSize=\"5\"\n                         responsive=\"true\"\n                         previousLabel=\"{{'prev' | translate}}\"\n                         nextLabel=\"{{'next' | translate}}\"\n                         screenReaderPaginationLabel=\"Pagination\"\n                         screenReaderPageLabel=\"page\"\n                         screenReaderCurrentLabel=\"{{'you-are-on-page' | translate}}\">\n    </pagination-controls>\n  </div>\n  <!-- </div> -->\n  <!-- </div> -->\n  <!-- <div *ngIf=\"regionsList.length === 0\">\n      <div class=\"container\">\n          <div class=\"alert alert-primary text-center mt-5\">{{'region-not-found' | translate}}</div>\n          <a routerLink=\"/cars/add\" class=\"btn btn-primary btn-sm mb-2 float-right\">\n              <i class=\"fa fa-plus\"></i>\n              {{'add-new-car' | translate}}\n          </a>\n      </div>\n  </div> -->\n</div>\n<div *ngIf=\"admins.length == 0\">\n  <div class=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\n</div>\n\n","import {Component, ElementRef, HostBinding, HostListener, Inject, OnInit, Renderer2, ViewChild} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Store} from '@ngrx/store';\nimport {AdminState} from '../../store/admin.reducer';\nimport {ToastrService} from 'ngx-toastr';\nimport {addAdmin} from '../../store/admin.actions';\nimport {ImageSnippet} from '../../../../@theme/model/image-snippet';\nimport {AdminsService} from '../../services/admins.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport {DOCUMENT} from '@angular/common';\n\n@Component({\n  selector: 'app-new-admin',\n  templateUrl: './new-admin.component.html',\n  styleUrls: ['./new-admin.component.scss']\n})\nexport class NewAdminComponent implements OnInit {\n  @ViewChild('passwordField') passwordField: ElementRef;\n  addAdminForm: FormGroup;\n  uploadButtonValue = 'upload';\n  imageName = 'select-image';\n  fileSelected = false;\n  imageUrl: string;\n  imagePathReady = false;\n  submitButtonValue = 'waiting-uploading-image';\n  selectedFile: ImageSnippet;\n\n  constructor(private store: Store<AdminState>,\n              private adminService: AdminsService,\n              public translate: TranslateService,\n              private toaster: ToastrService,\n              private render: Renderer2,\n              @Inject(DOCUMENT) private document: Document) { }\n\n  ngOnInit(): void {\n    this.addAdminForm = new FormGroup({\n      name: new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required),\n      email: new FormControl('', [Validators.required, Validators.email]),\n      userID: new FormControl(''),\n      image: new FormControl('')\n    });\n    // Change eyeIcon position in rtl\n    this.checkLangChange();\n  }\n\n  showPassword() {\n    this.passwordField.nativeElement.setAttribute('type', 'text');\n  }\n\n  hidePassword() {\n    this.passwordField.nativeElement.setAttribute('type', 'password');\n  }\n\n\n  updateName(imageInput: any) {\n    const file: File = imageInput.files[0];\n    this.uploadButtonValue = 'upload';\n    this.imageName = file.name;\n    this.fileSelected = true;\n  }\n\n  processFile(imageInput: any) {\n    this.fileSelected = false;\n    this.uploadButtonValue = 'uploading...';\n    console.log('Processing File');\n    const file: File = imageInput.files[0];\n    const reader = new FileReader();\n\n    reader.addEventListener('load', (event: any) => {\n      this.selectedFile = new ImageSnippet(event.target.result, file);\n      this.adminService.uploadImage(this.selectedFile.file).subscribe(\n        (res) => {\n          console.log(res);\n          this.imageUrl = res;\n          this.uploadButtonValue = 'uploaded';\n          this.imagePathReady = true;\n          this.submitButtonValue = 'new-admin';\n        },\n        (err) => {\n          this.uploadButtonValue = 'upload';\n          this.fileSelected = true;\n          this.toaster.error('Network Error, Please Try After a Few Seconds');\n          console.log(err);\n        });\n    });\n    reader.readAsDataURL(file);\n  }\n\n  onSubmit() {\n    if (!this.addAdminForm.valid) {\n      this.toaster.error('Form Not Valid !');\n      return;\n    }\n    const formObject = this.addAdminForm.getRawValue();\n    formObject.userID = formObject.email;\n    formObject.image = this.imageUrl;\n    console.log(formObject);\n    this.store.dispatch(addAdmin({admin: formObject}));\n  }\n\n  checkLangChange() {\n    this.translate.onLangChange.subscribe(lang => {\n      console.log('lang change to : ', lang);\n      if (lang.lang == 'ar') {\n        console.log('lang : ', lang.lang);\n        this.render.removeClass(this.document.querySelector('.input-group-custom'), 'input-group');\n        this.render.addClass(this.document.querySelector('.input-group-custom'), 'input-group-ar');\n      } else {\n        this.render.addClass(this.document.querySelector('.input-group-custom'), 'input-group');\n        this.render.removeClass(this.document.querySelector('.input-group-custom'), 'input-group-ar');\n      }\n    });\n  }\n}\n","<!-- general form elements -->\n<div class=\"container-fluid\">\n  <div class=\"content-header\">\n    <h1 class=\"text-center mt-5 mb-3\">{{'new-admin-page' | translate}}</h1>\n  </div>\n  <div class=\"card card-info mb-5\">\n    <div class=\"card-header bg-light-blue text-white p-3\">\n      <!-- <h3 class=\"card-title mb-0\">{{'new-event' | translate}}</h3> -->\n    </div>\n    <!-- /.card-header -->\n    <!-- form start -->\n    <form [formGroup]=\"addAdminForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"card-body\">\n        <div class=\"form-group\">\n          <label for=\"exampleInputname1\">{{'name' | translate}}</label>\n          <input type=\"text\"\n                 [ngClass]=\"{'is-invalid': addAdminForm.get('name').errors &&\n                           (addAdminForm.get('name').touched || addAdminForm.get('name').dirty)}\"\n                 name=\"name\"\n                 formControlName=\"name\"\n                 id=\"exampleInputname1\"\n                 class=\"form-control\"\n                 placeholder=\"{{'name-type-placeholder' | translate}}\">\n          <span class=\"invalid-feedback\" *ngIf=\"addAdminForm.get('name').errors?.required\">{{'name-field-is-required' | translate}}</span>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"exampleInputpassword\">{{'password' | translate}}</label>\n          <div class=\"position-relative\">\n          <input #passwordField type=\"password\"\n                 [ngClass]=\"{'is-invalid': addAdminForm.get('password').errors &&\n                           (addAdminForm.get('password').touched || addAdminForm.get('password').dirty)}\"\n                 name=\"password\"\n                 formControlName=\"password\"\n                 id=\"exampleInputpassword\"\n                 class=\"form-control\"\n                 placeholder=\"{{'password-type-placeholder' | translate}}\">\n            <i (mouseenter)=\"showPassword()\" (mouseleave)=\"hidePassword()\" class=\"fa fa-eye fa-custom\"></i>\n          </div>\n          <span class=\"invalid-feedback\" *ngIf=\"addAdminForm.get('password').errors?.required\">{{'password-field-is-required' | translate}}</span>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"exampleInputEmail\">{{'email' | translate}}</label>\n          <input type=\"email\"\n                 [ngClass]=\"{'is-invalid': addAdminForm.get('email').errors &&\n                           (addAdminForm.get('email').touched || addAdminForm.get('email').dirty)}\"\n                 name=\"email\"\n                 formControlName=\"email\"\n                 id=\"exampleInputEmail\"\n                 class=\"form-control\"\n                 placeholder=\"{{'email-type-placeholder' | translate}}\">\n          <span class=\"invalid-feedback\" *ngIf=\"addAdminForm.get('email').errors?.required\">{{'email-field-is-required' | translate}}</span>\n          <span class=\"invalid-feedback\" *ngIf=\"addAdminForm.get('email').errors?.email\">{{'email-field-valid' | translate}}</span>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"exampleInputupload\">{{'upload' | translate}}</label>\n          <div class=\"input-group input-group-custom\">\n            <div class=\"custom-file\">\n              <input #imageInput type=\"file\" accept=\"image/*\" class=\"custom-file-input\" id=\"file-input\"\n                     (change)=\"updateName(imageInput)\">\n              <label class=\"custom-file-label\" for=\"file-input\">{{imageName | translate}}</label>\n            </div>\n            <div class=\"input-group-append\">\n              <button class=\"btn btn-success\" type=\"button\" (click)=\"processFile(imageInput)\" [disabled]=!fileSelected>\n                {{uploadButtonValue | translate}}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <!-- /.card-body -->\n\n      <div class=\"card-footer\">\n        <button type=\"submit\" class=\"btn bg-light-blue text-white\" [disabled]=\"addAdminForm.invalid\">{{'create' | translate}}</button>\n      </div>\n    </form>\n  </div>\n  <!-- /.card -->\n</div>\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {AdminConfig} from '../../AdminConfig';\nimport {Admin} from '../model/admin.model';\nimport {AdminsResponse} from '../model/admins-response';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminsService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  getAdmins(): Observable<AdminsResponse> {\n    return this.httpClient.get<AdminsResponse>(AdminConfig.adminsAPI);\n  }\n\n  newAdmin(data): Observable<any> {\n    return this.httpClient.post(AdminConfig.createAdminAPI, data);\n  }\n\n  deleteAdmin(userID: string): Observable<any> {\n    return this.httpClient.delete(`${AdminConfig.deleteAdminAPI}/${userID}`);\n  }\n\n  // Admin Section - Upload Image\n  public uploadImage(image: File): Observable<string> {\n    const formData = new FormData();\n    formData.append('image', image);\n    return this.httpClient.post<string>(AdminConfig.generalUploadAPI, formData);\n  }\n}\n","import { createAction, props } from '@ngrx/store';\nimport { Update } from '@ngrx/entity';\n\nimport { Admin } from '../model/admin.model';\n\nexport const loadAdmins = createAction(\n  '[Admin/API] Load Admins',\n);\n\nexport const loadAdminsSuccess = createAction(\n  '[Admin/API] Load Admins Success',\n  props<{ Data: Admin[] }>()\n);\n\nexport const loadAdminsFailure = createAction(\n  '[Admin/API] Load Admins Failure',\n  props<{ error: string }>()\n);\n\nexport const addAdmin = createAction(\n  '[Admin/API] Add Admin',\n  props<{ admin: {name: string, password: string, userID: string, image: string} }>()\n);\n\nexport const addAdminSuccess = createAction(\n  '[Admin/API] Add Admin Success'\n);\n\nexport const addAdminFailure = createAction(\n  '[Admin/API] Add Admin Failure',\n  props<{ error: string }>()\n);\n\nexport const deleteAdmin = createAction(\n  '[Admin/API] Delete Admin',\n  props<{ userID: string }>()\n);\n\nexport const deleteAdminSuccess = createAction(\n  '[Admin/API] Delete Admin Success',\n  props<{ userID: string }>()\n);\n\nexport const deleteAdminFailure = createAction(\n  '[Admin/API] Delete Admin Failure',\n  props<{ error: string }>()\n);\n","import { Injectable } from '@angular/core';\nimport {Actions, createEffect, ofType} from '@ngrx/effects';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {ToastrService} from 'ngx-toastr';\nimport * as adminActions from './admin.actions';\nimport {catchError, exhaustMap, map, mergeMap, switchMap, tap} from 'rxjs/operators';\nimport {AdminsService} from '../services/admins.service';\nimport {of} from 'rxjs';\nimport {createAction} from '@ngrx/store';\n\n\n@Injectable()\nexport class AdminEffects {\n\n\n\n  constructor(private actions$: Actions,\n              private adminService: AdminsService,\n              private router: Router,\n              private activatedRoute: ActivatedRoute,\n              private toaster: ToastrService) {}\n\n  loadAdmins$ = createEffect(() => this.actions$.pipe(\n    ofType(adminActions.loadAdmins),\n    mergeMap(() => this.adminService.getAdmins()\n      .pipe(\n        map(response => {\n          return adminActions.loadAdminsSuccess(response);\n        }),\n        catchError(error => of(adminActions.loadAdminsFailure({error})))\n      ))\n  ));\n\n  addAdmin$ = createEffect(() => this.actions$.pipe(\n    ofType(adminActions.addAdmin),\n    exhaustMap(action => this.adminService.newAdmin(action.admin)\n      .pipe(\n        map((response: any) => {\n          this.toaster.success(response.msg);\n          return adminActions.addAdminSuccess();\n        }),\n        catchError(error => of(adminActions.addAdminFailure({error})))\n      ))\n  ));\n\n  redirectAfterAdd$ = createEffect(() => this.actions$.pipe(\n    ofType(adminActions.addAdminSuccess),\n    tap(() => this.router.navigate(['admins']))\n  ), { dispatch: false });\n\n  deleteAdmin$ = createEffect(() => this.actions$.pipe(\n    ofType(adminActions.deleteAdmin),\n    mergeMap(action => this.adminService.deleteAdmin(action.userID)\n      .pipe(\n        map((response: any) => {\n          console.log('effect res : ', response);\n          this.toaster.success(response.msg);\n          return adminActions.deleteAdminSuccess({userID: action.userID});\n        }),\n        catchError(error => of(adminActions.deleteAdminFailure({error})))\n      ))\n  ));\n\n}\n","import { Action, createReducer, on } from '@ngrx/store';\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\nimport { Admin } from '../model/admin.model';\nimport * as AdminActions from './admin.actions';\n\nexport const adminsFeatureKey = 'admins';\n\nexport interface AdminState extends EntityState<Admin> {\n  // additional entities state properties\n  Data: Admin[];\n  error: string;\n}\n\nexport const adapter: EntityAdapter<Admin> = createEntityAdapter<Admin>({\n  selectId: (admin: Admin) => admin.userID\n});\n\nexport const initialState: AdminState = adapter.getInitialState({\n  // additional entity state properties\n  Data: undefined,\n  error: undefined\n});\n\n\nexport const reducer = createReducer(\n  initialState,\n  on(AdminActions.loadAdminsSuccess,\n    (state, action) => adapter.setAll(action.Data, state)\n  ),\n  on(AdminActions.loadAdminsFailure,\n    (state, action) => {\n      return {\n        ...state,\n        error: action.error\n      };\n    }\n  ),\n  on(AdminActions.addAdminFailure,\n    (state, action) => {\n      return {\n        ...state,\n        error: action.error\n      };\n    }\n  ),\n  on(AdminActions.deleteAdminSuccess,\n    (state, action) => adapter.removeOne(action.userID, state)\n  ),\n  on(AdminActions.deleteAdminFailure,\n    (state, action) => {\n      return {\n        ...state,\n        error: action.error\n      };\n    }\n  ),\n);\n\n\nexport const {\n  selectIds,\n  selectEntities,\n  selectAll,\n  selectTotal,\n} = adapter.getSelectors();\n","import {createFeatureSelector, createSelector} from '@ngrx/store';\r\nimport {adminsFeatureKey, AdminState, selectAll} from './admin.reducer';\r\n\r\nconst adminFeatureState = createFeatureSelector(adminsFeatureKey);\r\n\r\nexport const getAllAdminsSelector = createSelector(adminFeatureState, selectAll);\r\n\r\nexport const getAdminErrorSelector = createSelector(adminFeatureState, (state: AdminState) => state.error);\r\n"],"sourceRoot":"webpack:///"}