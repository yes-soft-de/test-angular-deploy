{"version":3,"sources":["./src/app/pages/regions/components/add-region/add-region.component.ts","./src/app/pages/regions/components/add-region/add-region.component.html","./src/app/pages/regions/components/all-regions/all-regions.component.ts","./src/app/pages/regions/components/all-regions/all-regions.component.html","./src/app/pages/regions/components/edit-region/edit-region.component.ts","./src/app/pages/regions/components/edit-region/edit-region.component.html","./src/app/pages/regions/regions-routing.module.ts","./src/app/pages/regions/regions.module.ts","./src/app/pages/regions/services/regions.service.ts","./src/app/pages/regions/store/region.actions.ts","./src/app/pages/regions/store/region.effects.ts","./src/app/pages/regions/store/region.reducer.ts","./src/app/pages/regions/store/region.selector.ts"],"names":[],"mappings":"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","file":"regions-regions-module-es2015.js","sourcesContent":["import { MapsAPILoader } from '@agm/core';\nimport { Component, ElementRef, NgZone, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { ToastrService } from 'ngx-toastr';\nimport { ImageSnippet } from 'src/app/@theme/model/image-snippet';\nimport { RegionsService } from '../../services/regions.service';\nimport { addRegion, deleteRegion } from '../../store/region.actions';\nimport { RegionState } from '../../store/region.reducer';\n\n@Component({\n  selector: 'app-add-region',\n  templateUrl: './add-region.component.html',\n  styleUrls: ['./add-region.component.scss']\n})\nexport class AddRegionComponent implements OnInit {\n  title: string = 'AGM project';\n  latitude: number;\n  longitude: number;\n  zoom: number;\n  address: string;\n  private geoCoder;\n  \n  @ViewChild('search')\n  public searchElementRef: ElementRef;\n\n  isSubmited = false;\n  addRegionForm: FormGroup;\n  uploadButtonValue = 'Upload';\n  coverUploadButtonValue = 'Upload';\n  imageName = 'Select Image';\n  fileSelected = false;\n  fileUploaded = false;\n  imageUrl: string;\n  imagePathReady = false;\n  submitButtonValue = 'Waiting Uploading Image';\n  selectedFile: ImageSnippet;\n\n  constructor(private store: Store<RegionState>,\n              private toaster: ToastrService,\n              private mapsAPILoader: MapsAPILoader,\n              private ngZone: NgZone,\n              private router: Router,\n              private activatedRoute: ActivatedRoute) {\n  }\n\n  ngOnInit() {\n    // Fetch Form Data\n    this.addRegionForm = new FormGroup({\n      name: new FormControl(''),\n      description: new FormControl(''),\n      location: new FormControl(''),\n      path: new FormControl(''),\n      placeId: new FormControl(''),\n    });\n\n    this.mapsAPILoader.load().then(() => {\n      this.setCurrentLocation();\n      this.geoCoder = new google.maps.Geocoder;\n  \n      let autocomplete = new google.maps.places.Autocomplete(this.searchElementRef.nativeElement);\n      autocomplete.addListener(\"place_changed\", () => {\n        this.ngZone.run(() => {\n          let place: google.maps.places.PlaceResult = autocomplete.getPlace();\n  \n          if (place.geometry === undefined || place.geometry === null) {\n            return;\n          }\n  \n          this.latitude = place.geometry.location.lat();\n          this.longitude = place.geometry.location.lng();\n          this.zoom = 12;\n        });\n      });\n    });\n\n  }\n\n  updateName(imageInput: any) {\n    const file: File = imageInput.files[0];\n    this.uploadButtonValue = 'Upload';\n    this.imageName = file.name;\n    this.fileSelected = true;\n  }\n\n  processFile(imageInput: any) {\n    this.fileSelected = false;\n    this.uploadButtonValue = 'Uploading...';\n    console.log('Processing File');\n    const file: File = imageInput.files[0];\n    const reader = new FileReader();\n\n    reader.addEventListener('load', (event: any) => {\n      this.selectedFile = new ImageSnippet(event.target.result, file);\n      // this.categoryService.uploadImage(this.selectedFile.file).subscribe(\n      //   (res) => {\n      //     console.log(res);\n      //     this.imageUrl = res;\n      //     this.uploadButtonValue = 'Uploaded';\n      //     this.imagePathReady = true;\n      //     this.submitButtonValue = 'New Category';\n      //   },\n      //   (err) => {\n      //     console.log(err);\n      //   });\n    });\n    reader.readAsDataURL(file);\n  }\n\n\n\n  onSubmit() {\n    this.isSubmited = true;\n    if (!this.addRegionForm.valid) {\n      this.toaster.error('Error : Form Not Valid');\n      this.isSubmited = false;\n      return false;\n    }\n    // Fetch All Form Data On Json Type\n    const formObject = this.addRegionForm.getRawValue();\n    this.store.dispatch(addRegion({region: formObject}));    \n  }\n\n\n  private setCurrentLocation() {\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        this.latitude = position.coords.latitude;\n        this.longitude = position.coords.longitude;\n        this.zoom = 8;\n        this.getAddress(this.latitude, this.longitude);\n      });\n    }\n  }\n  \n  getAddress(latitude, longitude) {\n    this.geoCoder.geocode({ 'location': { lat: latitude, lng: longitude } }, (results, status) => {\n      if (status === 'OK') {\n        if (results[0]) {\n          this.zoom = 12;\n          this.address = results[0].formatted_address;\n        } else {\n          window.alert('No results found');\n        }\n      } else {\n        window.alert('Geocoder failed due to: ' + status);\n      }\n  \n    });\n  }\n\n}\n","<!-- general form elements -->\n<div class=\"container-fluid\">\n    <div class=\"content-header\">\n        <h1 class=\"text-center my-5\">{{'create-region-page' | translate}}</h1>\n    </div>\n    <div class=\"card card-info\">\n        <div class=\"card-header bg-sidebar-item-button text-white\">\n            <h3 class=\"card-title mb-0\">{{'new-region' | translate}}</h3>\n        </div>\n        <!-- /.card-header -->\n        <!-- form start -->\n        <form [formGroup]=\"addRegionForm\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"card-body\">\n                <div class=\"form-group\">\n                    <label class=\"col-form-label\" for=\"inputNameSuccess\">{{'name' | translate}}</label>\n                    <input class=\"form-control\"\n                           [ngClass]=\"{'is-invalid': addRegionForm.get('name').errors &&\n                           (addRegionForm.get('name').touched || addRegionForm.get('name').dirty)}\"\n                           type=\"text\"\n                           name=\"name\"\n                           id=\"inputNameSuccess\"\n                           formControlName=\"name\"\n                           placeholder=\"{{'name-type-placeholder' | translate}}\">\n                    <span class=\"invalid-feedback\" *ngIf=\"addRegionForm.get('name').errors?.required\">{{'name-field-required' | translate}}</span>                      \n                </div>\n                <div class=\"form-group\">\n                    <label for=\"exampleInputEmail1\">{{'location' | translate}}</label>\n                    <input type=\"text\"\n                           [ngClass]=\"{'is-invalid': addRegionForm.get('location').errors &&\n                           (addRegionForm.get('location').touched || addRegionForm.get('location').dirty)}\"\n                           name=\"location\"\n                           formControlName=\"location\"\n                           id=\"exampleInputlocation1\"\n                           class=\"form-control\"\n                           placeholder=\"{{'location-type-placeholder' | translate}}\">\n                    <span class=\"invalid-feedback\" *ngIf=\"addRegionForm.get('location').errors?.required\">location Field Is Required</span>\n                    <span class=\"invalid-feedback\" *ngIf=\"addRegionForm.get('location').errors?.location\">Please enter a vaild location address</span>\n                </div>\n                \n                <div class=\"form-group\">\n                    <label for=\"exampleInputplaceId1\">PlaceId</label>\n                    <input type=\"text\"\n                           [ngClass]=\"{'is-invalid': addRegionForm.get('placeId').errors &&\n                           (addRegionForm.get('placeId').touched || addRegionForm.get('placeId').dirty)}\"\n                           name=\"placeId\"\n                           formControlName=\"placeId\"\n                           id=\"exampleInputplaceId1\"\n                           class=\"form-control\"\n                           placeholder=\"Type The Location Id\">\n                    <span class=\"invalid-feedback\" *ngIf=\"addRegionForm.get('placeId').errors?.required\">Location Id Field Is Required</span>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"exampleInputdescription1\">{{'description' | translate}}</label>\n                    <textarea class=\"form-control\" \n                           [ngClass]=\"{'is-invalid': addRegionForm.get('description').errors &&\n                           (addRegionForm.get('description').touched || addRegionForm.get('description').dirty)}\"\n                           name=\"description\"\n                           formControlName=\"description\"\n                           id=\"exampleInputdescription1\" \n                           placeholder=\"{{'description-type-placeholder' | translate}}\">\n                    </textarea>\n                    <span class=\"invalid-feedback\" *ngIf=\"addRegionForm.get('description').errors?.required\">{{'descriptioon-field-required' | translate}}</span>\n                    <span class=\"invalid-feedback\" *ngIf=\"addRegionForm.get('description').errors?.minlength\">description Must Be Greater Than 3</span>       \n                </div>\n            </div>\n            <!-- /.card-body -->\n\n            <div class=\"card-footer\">\n                <button type=\"submit\" class=\"btn bg-sidebar-item-button text-white\" [disabled]=\"addRegionForm.invalid || isSubmited\">{{'create' | translate}}</button>\n            </div>\n        </form>\n    </div>\n    <!-- /.card -->\n</div>\n<div class=\"container\">\n   \n    <h1>Angular Google Map with Search Box Example - ItSolutionStuff.com</h1>\n    \n    <div class=\"form-group\">\n      <label>Enter address</label>\n      <input type=\"text\" class=\"form-control\" (keydown.enter)=\"$event.preventDefault()\" placeholder=\"Search Nearest Location\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"off\" type=\"text\" #search>\n    </div>\n    \n    <agm-map [latitude]=\"latitude\" [longitude]=\"longitude\" [zoom]=\"zoom\">\n      <agm-marker [latitude]=\"latitude\" [longitude]=\"longitude\" [markerDraggable]=\"true\"\n        ></agm-marker>\n    </agm-map>\n    \n    <h5>Address: {{address}}</h5>\n    <div>Latitude: {{latitude}}</div>\n    <div>Longitude: {{longitude}}</div>\n    \n  </div>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable, Subscription } from 'rxjs';\nimport { setLoadSpinner } from 'src/app/@theme/store/shared/shared.actions';\nimport { Region } from '../../model/region.model';\nimport * as regionsAction from '../../store/region.actions';\nimport { RegionState } from '../../store/region.reducer';\nimport { getAllRegionsSelector } from '../../store/region.selector';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-all-regions',\n  templateUrl: './all-regions.component.html',\n  styleUrls: ['./all-regions.component.scss']\n})\nexport class AllRegionsComponent implements OnInit, OnDestroy {\n  regions: Region[];\n  regionsList: Region[] = [];\n  name: any;\n  config: any;\n  isDeleted: boolean;\n  regionsSubscription: Subscription;\n\n  constructor(private store: Store<RegionState>, private http: HttpClient) { }\n\n  ngOnInit(): void {\n    this.http.get('https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=24.666626,46.7370781&rankby=distance&key=AIzaSyDwb8pKJI4CyMCgFuNtUo3zxVS7y5PN97I').subscribe(\n      data => console.log(data)\n    );\n    this.store.dispatch(regionsAction.loadRegions());\n    this.getAllRegions();\n  }\n\n  getAllRegions() {\n    this.regionsSubscription = this.store.select(getAllRegionsSelector).subscribe(\n      data => {\n        console.log(data);\n        this.regions = data;\n        this.regionsList = data;\n      }\n    );\n    this.config = {\n      itemsPerPage: 5,\n      currentPage: 1,\n      totalItems: this.regionsList.length\n    };\n  }\n\n  // Fetch The Page Number On Page Change\n  pageChanged(event) {\n    this.config.currentPage = event;\n  }\n\n  delete(regionId: number) {\n    if (confirm('Are You Sure You Want To Delete This Region')) {\n      this.isDeleted = true;\n      this.store.dispatch(regionsAction.deleteRegion({id: regionId}));\n      // this.toaster.success('Region Successfully Deleted');\n      setTimeout(() => { this.isDeleted = false; }, 1000);\n    } else {\n      return false;\n    }\n  }\n\n  applyFilter() {\n    // if the search input value is empty\n    if (!this.name) {\n      this.regionsList = [...this.regions];\n    } else {\n      this.regionsList = [];\n      this.regionsList = this.regions.filter(res => {\n        if (res.name) {\n          const name = res.name.toLocaleLowerCase().match(this.name.toLocaleLowerCase());\n          if (name) {\n            // display the Name Column\n            return name;\n          }\n        }\n      });\n    }\n  }\n\n\n  ngOnDestroy() {\n    this.regionsSubscription.unsubscribe();\n  }\n\n\n}\n","<div *ngIf=\"regions.length != 0\">\n    <!-- <div *ngIf=\"regionsList.length !== 0\"> -->\n      <!-- <div class=\"container-fluid\"> -->\n        <h1 class=\"text-center details-title my-4\">{{'manage-regions-page' | translate}}</h1>\n          <div class=\"row\">\n              <div class=\"col-10 col-sm-8 col-md-6 col-xl-4\">\n                  <div class=\"form-group mb-4\">\n                      <input\n                        id=\"exampleFormControlInput2\"\n                        [(ngModel)]=\"name\"\n                        (keyup)=\"applyFilter()\"\n                        type=\"text\"\n                        placeholder=\"{{'region-search-input' | translate}}\"\n                        title=\"{{'region-search-input' | translate}}\"\n                        class=\"form-control form-control-underlined border-primary search-input\">\n                  </div>\n              </div>\n              <!-- <div class=\"col-5 col-md-6 col-xl-8 align-self-center\">\n                <a class=\"btn btn-primary btn-sm mb-2 float-right\" routerLink=\"/regions/add\">\n                  <i class=\"fa fa-plus\"></i>\n                  {{'new-region' | translate}}\n                </a>\n              </div> -->\n          </div>\n        <div class=\"table-responsive text-center\">\n            <table class=\"table table-bordered main-table\">\n                <tr class=\"bg-dark text-white\">\n                    <td>{{'image' | translate}}</td>\n                    <td>{{'name' | translate}}</td>\n                    <td>{{'description' | translate}}</td>\n                    <td>{{'location' | translate}}</td>\n                    <td>{{'comment-number' | translate}}</td>\n                    <td>{{'rating-average' | translate}}</td>\n                    <td>{{'control' | translate}}</td>\n                </tr>\n                <tr *ngFor=\"let region of regionsList | paginate: config\">\n                  <td><img src=\"{{region?.path[0].path}}\" alt=\"{{region.name}} Image\" class=\"img-thumbnail img-custom\"></td>\n                  <td>{{region.name ? region.name : '-'}}</td>\n                  <td class=\"td-custom\">{{region.description ? region.description : '-'}}</td>\n                  <td>{{region.location ? region.location : '-'}}</td>\n                  <td>{{region.commentNumber ? region.commentNumber : '-'}}</td>\n                  <td>{{region.ratingAverage ? region.ratingAverage : '-'}}</td>\n                  <!-- <td>\n                    <a (click)=\"suggest(car.id, (car.suggest ? false : true))\"\n                       class=\"text-primary mr-1 mb-1\"\n                       title=\"Change To {{car.suggest ? 'Not Recommended' : 'Recommended' }}\"\n\n                       style=\"cursor: pointer; {{ suggestProgress ? 'pointer-events: none;' : '' }}\">\n                      {{ car.suggest ? 'Recommended' : 'Not Recommended' }}\n                    </a>\n                  </td> -->\n                  <td>\n                      <a routerLink=\"/regions/{{region?.id}}\" class=\"btn btn-success btn-sm mr-1 mb-1\">\n                        {{'update' | translate}}\n                    </a>\n                    <a (click)=\"delete(region?.id)\" class=\"btn btn-danger confirm btn-sm mr-1 mb-1 {{isDeleted ? 'disabled' : ''}}\">\n                        {{'delete' | translate}}\n                      </a>\n                  </td>\n                </tr>\n            </table>\n            <pagination-controls class=\"my-pagination\"\n                                 (pageChange)=\"pageChanged($event)\"\n                                 autoHide=\"true\"\n                                 maxSize=\"5\"\n                                 responsive=\"true\"\n                                 previousLabel=\"{{'prev' | translate}}\"\n                                 nextLabel=\"{{'next' | translate}}\"\n                                 screenReaderPaginationLabel=\"Pagination\"\n                                 screenReaderPageLabel=\"page\"\n                                 screenReaderCurrentLabel=\"{{'you-are-on-page' | translate}}\">\n            </pagination-controls>\n        </div>\n      <!-- </div> -->\n    <!-- </div> -->\n    <!-- <div *ngIf=\"regionsList.length === 0\">\n        <div class=\"container\">\n            <div class=\"alert alert-primary text-center mt-5\">{{'region-not-found' | translate}}</div>\n            <a routerLink=\"/cars/add\" class=\"btn btn-primary btn-sm mb-2 float-right\">\n                <i class=\"fa fa-plus\"></i>\n                {{'add-new-car' | translate}}\n            </a>\n        </div>\n    </div> -->\n</div>\n<div *ngIf=\"regions.length == 0\">\n    <div class=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { ImageSnippet } from 'src/app/@theme/model/image-snippet';\nimport { RegionsService } from '../../services/regions.service';\n\n@Component({\n  selector: 'app-edit-region',\n  templateUrl: './edit-region.component.html',\n  styleUrls: ['./edit-region.component.scss']\n})\nexport class EditRegionComponent implements OnInit {\n\n  isSubmited = false;\n  editRegionForm: FormGroup;\n  uploadButtonValue = 'Upload';\n  coverUploadButtonValue = 'Upload';\n  imageName = 'Select Image';\n  fileSelected = false;\n  fileUploaded = false;\n  imageUrl: string;\n  imagePathReady = false;\n  submitButtonValue = 'Waiting Uploading Image';\n  selectedFile: ImageSnippet;\n\n  constructor(private formBuilder: FormBuilder,\n              private regionService: RegionsService,\n              private toaster: ToastrService,\n              private router: Router,\n              private activatedRoute: ActivatedRoute) {\n  }\n\n  ngOnInit() {\n    // Fetch Form Data\n    this.editRegionForm = new FormGroup({\n      name: new FormControl(''),\n      description: new FormControl(''),\n      location: new FormControl(''),\n      path: new FormControl(''),\n      placeId: new FormControl(''),\n    });\n    // this.initMap();\n  }\n\n  updateName(imageInput: any) {\n    const file: File = imageInput.files[0];\n    this.uploadButtonValue = 'Upload';\n    this.imageName = file.name;\n    this.fileSelected = true;\n  }\n\n  processFile(imageInput: any) {\n    this.fileSelected = false;\n    this.uploadButtonValue = 'Uploading...';\n    console.log('Processing File');\n    const file: File = imageInput.files[0];\n    const reader = new FileReader();\n\n    reader.addEventListener('load', (event: any) => {\n      this.selectedFile = new ImageSnippet(event.target.result, file);\n      // this.categoryService.uploadImage(this.selectedFile.file).subscribe(\n      //   (res) => {\n      //     console.log(res);\n      //     this.imageUrl = res;\n      //     this.uploadButtonValue = 'Uploaded';\n      //     this.imagePathReady = true;\n      //     this.submitButtonValue = 'New Category';\n      //   },\n      //   (err) => {\n      //     console.log(err);\n      //   });\n    });\n    reader.readAsDataURL(file);\n  }\n\n\n\n  onSubmit() {\n    console.log(this.editRegionForm.getRawValue());\n    this.regionService.createRegion(this.editRegionForm.getRawValue()).subscribe(\n      data => console.log('data : ', data),\n      error => console.log('error : ', error));\n    // this.isSubmitted = true;\n\n    // if (!this.editRegionForm.valid) {\n    //   this.toaster.error('Error : Form Not Valid');\n    //   this.isSubmitted = false;\n    //   return false;\n    // } else {\n    //   // Fetch All Form Data On Json Type\n    //   const formObject = this.editRegionForm.getRawValue();\n    //   formObject.titleShow = formObject.titleShow == 0 ? false : true;\n    //   formObject.createdBy = this.tokenService.userName;\n    //   formObject.image = this.imageUrl;\n    //   formObject.coverImage = this.coverImageUrl;\n    //   this.categoryService.createCategory(formObject).subscribe(\n    //     (createResponse: any) => console.log(createResponse),\n    //     error => {\n    //       this.isSubmitted = false;\n    //       console.log('Error : ', error);\n    //     },\n    //     () => {\n    //       this.isSubmitted = false;\n    //       this.router.navigate(['../'], {relativeTo: this.activatedRoute});\n    //     }\n    //   );\n    // }\n  }\n\n  // This sample uses the Place Autocomplete widget to allow the user to search\n// for and select a place. The sample then displays an info window containing\n// the place ID and other information about the place that the user has\n// selected.\n\n// This example requires the Places library. Include the libraries=places\n// parameter when you first load the API. For example:\n// <script src=\"https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places\">\n\n  // initMap(): void {\n  //   const map = new google.maps.Map(\n  //     document.getElementById(\"map\") as HTMLElement,\n  //     {\n  //       center: { lat: -33.8688, lng: 151.2195 },\n  //       zoom: 13,\n  //     }\n  //   );\n\n  //   const input = document.getElementById(\"pac-input\") as HTMLInputElement;\n\n  //   const autocomplete = new google.maps.places.Autocomplete(input);\n  //   autocomplete.bindTo(\"bounds\", map);\n\n  //   // Specify just the place data fields that you need.\n  //   autocomplete.setFields([\"place_id\", \"geometry\", \"name\"]);\n\n  //   map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);\n\n  //   const infowindow = new google.maps.InfoWindow();\n  //   const infowindowContent = document.getElementById(\n  //     \"infowindow-content\"\n  //   ) as HTMLElement;\n  //   infowindow.setContent(infowindowContent);\n\n  //   const marker = new google.maps.Marker({ map: map });\n\n  //   marker.addListener(\"click\", () => {\n  //     infowindow.open(map, marker);\n  //   });\n\n  //   autocomplete.addListener(\"place_changed\", () => {\n  //     infowindow.close();\n\n  //     const place = autocomplete.getPlace();\n\n  //     if (!place.geometry || !place.geometry.location) {\n  //       return;\n  //     }\n\n  //     if (place.geometry.viewport) {\n  //       map.fitBounds(place.geometry.viewport);\n  //     } else {\n  //       map.setCenter(place.geometry.location);\n  //       map.setZoom(17);\n  //     }\n\n  //     // Set the position of the marker using the place ID and location.\n  //     // @ts-ignore This should be in @typings/googlemaps.\n  //     marker.setPlace({\n  //       placeId: place.place_id,\n  //       location: place.geometry.location,\n  //     });\n\n  //     marker.setVisible(true);\n\n  //     (infowindowContent.children.namedItem(\n  //       \"place-name\"\n  //     ) as HTMLElement).textContent = place.name as string;\n  //     (infowindowContent.children.namedItem(\n  //       \"place-id\"\n  //     ) as HTMLElement).textContent = place.place_id as string;\n  //     (infowindowContent.children.namedItem(\n  //       \"place-address\"\n  //     ) as HTMLElement).textContent = place.formatted_address as string;\n  //     infowindow.open(map, marker);\n  //   });\n  // }\n\n\n}\n","<!-- general form elements -->\n<div class=\"container-fluid\">\n    <div class=\"content-header\">\n        <h1 class=\"text-center my-5\">{{'update-region-page' | translate}}</h1>\n    </div>\n    <div class=\"card card-info\">\n        <div class=\"card-header bg-sidebar-item-button text-white\">\n            <h3 class=\"card-title mb-0\">{{'new-region' | translate}}</h3>\n        </div>\n        <!-- /.card-header -->\n        <!-- form start -->\n        <form [formGroup]=\"editRegionForm\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"card-body\">\n                <div class=\"form-group\">\n                    <label class=\"col-form-label\" for=\"inputNameSuccess\">{{'name' | translate}}</label>\n                    <input class=\"form-control\"\n                           [ngClass]=\"{'is-invalid': editRegionForm.get('name').errors &&\n                           (editRegionForm.get('name').touched || editRegionForm.get('name').dirty)}\"\n                           type=\"text\"\n                           name=\"name\"\n                           id=\"inputNameSuccess\"\n                           formControlName=\"name\"\n                           placeholder=\"{{'name-type-placeholder' | translate}}\">\n                    <span class=\"invalid-feedback\" *ngIf=\"editRegionForm.get('name').errors?.required\">{{'name-field-required' | translate}}</span>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"exampleInputEmail1\">Location</label>\n                    <input type=\"text\"\n                           [ngClass]=\"{'is-invalid': editRegionForm.get('location').errors &&\n                           (editRegionForm.get('location').touched || editRegionForm.get('location').dirty)}\"\n                           name=\"location\"\n                           formControlName=\"location\"\n                           id=\"exampleInputlocation1\"\n                           class=\"form-control\"\n                           placeholder=\"Type The location\">\n                    <span class=\"invalid-feedback\" *ngIf=\"editRegionForm.get('location').errors?.required\">location Field Is Required</span>\n                    <span class=\"invalid-feedback\" *ngIf=\"editRegionForm.get('location').errors?.location\">Please enter a vaild location address</span>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"exampleInputdescription1\">{{'description' | translate}}</label>\n                    <textarea class=\"form-control\"\n                           [ngClass]=\"{'is-invalid': editRegionForm.get('description').errors &&\n                           (editRegionForm.get('description').touched || editRegionForm.get('description').dirty)}\"\n                           name=\"description\"\n                           formControlName=\"description\"\n                           id=\"exampleInputdescription1\"\n                           placeholder=\"{{'description-type-placeholder' | translate}}\">\n                    </textarea>\n                    <span class=\"invalid-feedback\" *ngIf=\"editRegionForm.get('description').errors?.required\">{{'descriptioon-field-required' | translate}}</span>\n                    <span class=\"invalid-feedback\" *ngIf=\"editRegionForm.get('description').errors?.minlength\">description Must Be Greater Than 3</span>\n                </div>\n            </div>\n            <!-- /.card-body -->\n\n            <div class=\"card-footer\">\n                <button type=\"submit\" class=\"btn bg-sidebar-item-button text-white\" [disabled]=\"editRegionForm.invalid || isSubmited\">Submit</button>\n            </div>\n        </form>\n    </div>\n    <!-- /.card -->\n</div>\n\n<div style=\"display: none\">\n  <input\n    id=\"pac-input\"\n    class=\"controls\"\n    type=\"text\"\n    placeholder=\"Enter a location\"\n  />\n</div>\n<div id=\"map\"></div>\n<div id=\"infowindow-content\">\n  <span id=\"place-name\" class=\"title\"></span><br />\n  <strong>Place ID:</strong> <span id=\"place-id\"></span><br />\n  <span id=\"place-address\"></span>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddRegionComponent } from './components/add-region/add-region.component';\nimport { AllRegionsComponent } from './components/all-regions/all-regions.component';\nimport { EditRegionComponent } from './components/edit-region/edit-region.component';\n\n\nconst routes: Routes = [\n  { path: '', component: AllRegionsComponent },\n  { path: 'add', component: AddRegionComponent },\n  { path: ':id', component: EditRegionComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RegionsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { RegionsRoutingModule } from './regions-routing.module';\nimport { AllRegionsComponent } from './components/all-regions/all-regions.component';\nimport { StoreModule } from '@ngrx/store';\nimport * as fromRegion from './store/region.reducer';\nimport { EffectsModule } from '@ngrx/effects';\nimport { RegionEffects } from './store/region.effects';\nimport { ThemeModule } from 'src/app/@theme/theme.module';\nimport { AddRegionComponent } from './components/add-region/add-region.component';\nimport { EditRegionComponent } from './components/edit-region/edit-region.component';\nimport { AgmCoreModule } from '@agm/core';\nimport { environment } from 'src/environments/environment';\n\n\n@NgModule({\n  declarations: [\n    AllRegionsComponent,\n    AddRegionComponent,\n    EditRegionComponent\n  ],\n  imports: [\n    ThemeModule,\n    RegionsRoutingModule,\n    StoreModule.forFeature(fromRegion.regionsFeatureKey, fromRegion.reducer),\n    EffectsModule.forFeature([RegionEffects]),\n    AgmCoreModule\n    // AgmCoreModule.forRoot({\n    //   apiKey: 'AIzaSyDwb8pKJI4CyMCgFuNtUo3zxVS7y5PN97I',\n    //   libraries: ['places']\n    // })\n  ]\n})\nexport class RegionsModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { TokenService } from 'src/app/@theme/admin-service/token/token.service';\nimport { AdminConfig } from '../../AdminConfig';\nimport { RegionDetailsResponse } from '../model/region-details.response';\nimport { RegionsResponse } from '../model/region-response.model';\nimport { Region } from '../model/region.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegionsService {\n\n  constructor(private httpClient: HttpClient,\n              private tokenService: TokenService) { }\n\n  // All Regions\n  getAllRegions(): Observable<RegionsResponse> {\n    return this.httpClient.get<RegionsResponse>(AdminConfig.regionsAPI);\n  }\n\n  // Get Region Details\n  getRegion(regionId: number): Observable<RegionDetailsResponse> {\n    return this.httpClient.delete<RegionDetailsResponse>(`${AdminConfig.regionAPI}/${regionId}`);\n  }\n\n  // Create New Regions\n  createRegion(data): Observable<Region> {\n    return this.httpClient.post<Region>(\n      AdminConfig.regionAPI,\n      JSON.stringify(data)\n    );\n  }\n\n  // Update Exists Region\n  updateRegion(regionId: number, data): Observable<Region> {\n    return this.httpClient.put<Region>(\n      `${AdminConfig.regionAPI}/${regionId}`,\n      JSON.stringify(data)\n    );\n  }\n\n  // Delete Region\n  deleteRegion(regionId: number): Observable<any> {\n    return this.httpClient.delete<any>(\n      `${AdminConfig.regionAPI}/${regionId}`\n    );\n  }\n\n}\n","import { createAction, props } from '@ngrx/store';\nimport { Update } from '@ngrx/entity';\n\nimport { Region } from '../model/region.model';\n\nexport const loadRegions = createAction('[Region/API] Load Regions');\n\nexport const loadRegionsSuccess = createAction(\n  '[Region/API] Load Regions Success', \n  props<{ Data: Region[] }>()\n);\n\nexport const loadRegionsFailure = createAction(\n  '[Region/API] Load Regions Failure', \n  props<{ error: string }>()\n);\n\nexport const loadRegion = createAction(\n  '[Region/API] Load Region',\n  props<{ id: number }>()\n);\n\nexport const loadRegionSuccess = createAction(\n  '[Region/API] Load Region Success', \n  props<{ region: Region }>()\n);\n\nexport const loadRegionFailure = createAction(\n  '[Region/API] Load Region Failure', \n  props<{ error: string }>()\n);\n\nexport const deleteRegion = createAction(\n  '[Region/API] Delete Region',\n  props<{ id: number }>()\n);\n\nexport const deleteRegionSuccess = createAction(\n  '[Region/API] Delete Region Success'\n);\n\n\nexport const deleteRegionFailure = createAction(\n  '[Region/API] Delete Region Failure',\n  props<{ error: string }>()\n);\n\nexport const addRegion = createAction(\n  '[Region/API] Add Region',\n  props<{ region: Region }>()\n);\n\nexport const addRegionSuccess = createAction(\n  '[Region/API] Add Region Success'\n);\n\nexport const addRegionFailure = createAction(\n  '[Region/API] Add Region Failure',\n  props<{ error: string }>()\n);\n\nexport const upsertRegion = createAction(\n  '[Region/API] Upsert Region',\n  props<{ region: Region }>()\n);\n\nexport const addRegions = createAction(\n  '[Region/API] Add Regions',\n  props<{ regions: Region[] }>()\n);\n\nexport const upsertRegions = createAction(\n  '[Region/API] Upsert Regions',\n  props<{ regions: Region[] }>()\n);\n\nexport const updateRegion = createAction(\n  '[Region/API] Update Region',\n  props<{ region: Update<Region> }>()\n);\n\nexport const updateRegions = createAction(\n  '[Region/API] Update Regions',\n  props<{ regions: Update<Region>[] }>()\n);\n\nexport const deleteRegions = createAction(\n  '[Region/API] Delete Regions',\n  props<{ ids: string[] }>()\n);\n\nexport const clearRegions = createAction(\n  '[Region/API] Clear Regions'\n);\n","import { Injectable } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Store } from '@ngrx/store';\nimport { ToastrService } from 'ngx-toastr';\nimport { of } from 'rxjs';\nimport { catchError, exhaustMap, map, mergeMap } from 'rxjs/operators';\nimport { AppState } from 'src/app/@theme/store/app-state';\nimport { setLoadSpinner } from 'src/app/@theme/store/shared/shared.actions';\nimport { RegionsService } from '../services/regions.service';\nimport * as regionsAction from '../store/region.actions';\n\n\n\n@Injectable()\nexport class RegionEffects {\n\n  constructor(private actions$: Actions,\n              private store: Store<AppState>,\n              private toaster: ToastrService,\n              private router: Router,\n              private activatedRoute: ActivatedRoute,\n              private regionService: RegionsService) {}\n\n  loadRegions$ = createEffect(() => this.actions$.pipe(\n    ofType(regionsAction.loadRegions),\n    mergeMap(() => this.regionService.getAllRegions()\n      .pipe(\n        map(response => {\n          // this.store.dispatch(setLoadSpinner({status: false}));\n          return regionsAction.loadRegionsSuccess(response)\n        }\n        ),\n        catchError(error => {\n          console.log('error effect: ', error);\n          if (error.error.error) {\n            this.toaster.error(error.error.error);\n          } else if (error.error.msg) {\n            this.toaster.error(error.error.msg);\n          }\n          return of(regionsAction.loadRegionsFailure(error));\n        })\n      ))\n  ));\n\n  loadRegion$ = createEffect(() => this.actions$.pipe(\n    ofType(regionsAction.loadRegion),\n    mergeMap(action => this.regionService.createRegion(action.id)\n      .pipe(\n        map(response => regionsAction.loadRegionSuccess({region: response})),\n        catchError(error => {\n          console.log('error effect', error);\n          return of(regionsAction.loadRegionFailure({error}))\n        })\n      ))\n  ));\n\n  addRegion$ = createEffect(() => this.actions$.pipe(\n    ofType(regionsAction.addRegion),\n    exhaustMap(action => this.regionService.createRegion(action.region)\n      .pipe(\n        map((response: any) => {\n          console.log('create effect reseponse :', response);\n          this.toaster.success(response?.msg);\n          return regionsAction.addRegionSuccess();\n        }),\n        catchError(error => {\n          console.log('error create effect', error);\n          return of(regionsAction.addRegionFailure({error}))\n        })\n      ))\n  ));\n\n  redirectAddRegion$ = createEffect(() => this.actions$.pipe(\n    ofType(regionsAction.addRegionSuccess),\n    map(response => {\n      this.router.navigate(['../'], {relativeTo: this.activatedRoute});\n    })\n  ), { dispatch: false });\n\n  deleteRegion$ = createEffect(() => this.actions$.pipe(\n    ofType(regionsAction.deleteRegion),\n    exhaustMap(action => this.regionService.deleteRegion(action.id)\n      .pipe(\n        map(response => {\n          console.log(response);          \n          this.toaster.success('Region Successfully Deleted');\n          return regionsAction.deleteRegionSuccess()}),\n        catchError(error => {\n          console.log('effect delete error', error);\n          return of(regionsAction.deleteRegionFailure({error}));\n        }))\n      ))\n  );\n}\n","import { Action, createReducer, on } from '@ngrx/store';\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\nimport { Region } from '../model/region.model';\nimport * as RegionActions from './region.actions';\n\nexport const regionsFeatureKey = 'regions';\n\nexport interface RegionState extends EntityState<Region> {\n  // additional entities state properties\n  Data: Region[];\n  regionDetails: Region;\n  error: string;\n}\n\nexport const adapter: EntityAdapter<Region> = createEntityAdapter<Region>();\n\nexport const initialState: RegionState = adapter.getInitialState({\n  // additional entity state properties\n  Data: undefined,\n  regionDetails: undefined,\n  error: undefined,\n});\n\n\nexport const reducer = createReducer(\n  initialState,\n  on(RegionActions.loadRegionsSuccess,\n    (state, action) => adapter.setAll(action.Data, state)\n  ),\n  on(RegionActions.loadRegionSuccess,\n    (state, action) => {\n      return {\n        ...state,\n        regionDetails: action.region\n      }\n    }),\n  on(RegionActions.addRegions,\n    (state, action) => adapter.addMany(action.regions, state)\n  ),\n  on(RegionActions.deleteRegion,\n    (state, action) => adapter.removeOne(action.id, state)\n  ),\n  on(RegionActions.addRegion,\n    (state, action) => adapter.addOne(action.region, state)\n  ),\n  on(RegionActions.upsertRegion,\n    (state, action) => adapter.upsertOne(action.region, state)\n  ),\n  on(RegionActions.addRegions,\n    (state, action) => adapter.addMany(action.regions, state)\n  ),\n  on(RegionActions.upsertRegions,\n    (state, action) => adapter.upsertMany(action.regions, state)\n  ),\n  on(RegionActions.updateRegion,\n    (state, action) => adapter.updateOne(action.region, state)\n  ),\n  on(RegionActions.updateRegions,\n    (state, action) => adapter.updateMany(action.regions, state)\n  ),\n  on(RegionActions.deleteRegions,\n    (state, action) => adapter.removeMany(action.ids, state)\n  ),\n  on(RegionActions.clearRegions,\n    state => adapter.removeAll(state)\n  ),\n);\n\n\nexport const {\n  selectIds,\n  selectEntities,\n  selectAll,\n  selectTotal,\n} = adapter.getSelectors();\n","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\r\nimport { regionsFeatureKey, RegionState, selectAll } from \"./region.reducer\";\r\n\r\nconst regionsFeatureState = createFeatureSelector<RegionState>(regionsFeatureKey);\r\n\r\nexport const getAllRegionsSelector = createSelector(regionsFeatureState, selectAll);"],"sourceRoot":"webpack:///"}