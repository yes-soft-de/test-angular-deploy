{"version":3,"sources":["./src/app/pages/guides/components/all-guides/all-guides.component.ts","./src/app/pages/guides/components/all-guides/all-guides.component.html","./src/app/pages/guides/components/guide-details/guide-details.component.ts","./src/app/pages/guides/components/guide-details/guide-details.component.html","./src/app/pages/guides/components/update-guide/update-guide.component.ts","./src/app/pages/guides/components/update-guide/update-guide.component.html","./src/app/pages/guides/guides-routing.module.ts","./src/app/pages/guides/guides.module.ts","./src/app/pages/guides/services/guides.service.ts","./src/app/pages/guides/store/guide.actions.ts","./src/app/pages/guides/store/guide.effects.ts","./src/app/pages/guides/store/guide.reducer.ts","./src/app/pages/guides/store/guide.selector.ts"],"names":[],"mappings":"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","file":"guides-guides-module-es2015.js","sourcesContent":["import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Store} from '@ngrx/store';\nimport {GuideState} from '../../store/guide.reducer';\nimport {getAllGuidesSelector} from '../../store/guide.selector';\nimport {loadGuides} from '../../store/guide.actions';\nimport {Observable, Subscription} from 'rxjs';\nimport {Guide} from '../../model/guide.model';\nimport * as regionsAction from '../../../regions/store/region.actions';\n\n@Component({\n  selector: 'app-all-guides',\n  templateUrl: './all-guides.component.html',\n  styleUrls: ['./all-guides.component.scss']\n})\nexport class AllGuidesComponent implements OnInit, OnDestroy {\n  guides: Guide[];\n  guidesList: Guide[] = [];\n  guidesSubscription: Subscription;\n  name: string;\n  config: any;\n\n  constructor(private store: Store<GuideState>) { }\n\n  ngOnInit(): void {\n\n    this.store.dispatch(loadGuides());\n    this.getAllGuides();\n\n  }\n\n  getAllGuides() {\n    this.guidesSubscription = this.store.select(getAllGuidesSelector).subscribe(\n      data => {\n        if (data) {\n          this.guides = data;\n          this.guidesList = data;\n          // Config the pagination\n          this.config = {\n            itemsPerPage: 5,\n            currentPage: 1,\n            totalItems: this.guidesList.length\n          };\n        }\n      }\n    );\n  }\n\n  // Fetch The Page Number On Page Change\n  pageChanged(event) {\n    this.config.currentPage = event;\n  }\n\n  applyFilter() {\n    // if the search input value is empty\n    if (!this.name) {\n      this.guidesList = [...this.guides];\n    } else {\n      this.guidesList = [];\n      this.guidesList = this.guides.filter(res => {\n        if (res.name) {\n          const name = res.name.toLocaleLowerCase().match(this.name.toLocaleLowerCase());\n          if (name) {\n            // display the Name Column\n            return name;\n          }\n        }\n        // if (res?.regions?.length > 0) {\n        //   res?.regions.forEach(e => {\n        //\n        //     if (e?.name) {\n        //       const regionsName = e?.name.toLocaleLowerCase().match(this.name.toLocaleLowerCase());\n        //       console.log(this.name, regionsName);\n        //       if (regionsName) {\n        //         // display the Name Column\n        //         debugger;\n        //         return regionsName;\n        //       }\n        //     }\n        //   });\n        // }\n        if (res.status) {\n          const status = res.status.toLocaleLowerCase().match(this.name.toLocaleLowerCase());\n          if (status) {\n            // display the Name Column\n            return status;\n          }\n        }\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    this.guidesSubscription.unsubscribe();\n  }\n}\n","  <div *ngIf=\"guides.length != 0\">\n    <!-- <div *ngIf=\"regionsList.length !== 0\"> -->\n    <!-- <div class=\"container-fluid\"> -->\n    <h1 class=\"text-center details-title my-4\">{{'manage-guides-page' | translate}}</h1>\n    <div class=\"row\">\n      <div class=\"col-10 col-sm-8 col-md-6 col-xl-4\">\n        <div class=\"form-group mb-4\">\n          <input\n            id=\"exampleFormControlInput2\"\n            [(ngModel)]=\"name\"\n            (keyup)=\"applyFilter()\"\n            type=\"text\"\n            placeholder=\"{{'guides-search-input' | translate}}\"\n            title=\"{{'guides-search-input' | translate}}\"\n            class=\"form-control form-control-underlined border-primary search-input\">\n        </div>\n      </div>\n      <!-- <div class=\"col-5 col-md-6 col-xl-8 align-self-center\">\n        <a class=\"btn btn-primary btn-sm mb-2 float-right\" routerLink=\"/regions/add\">\n          <i class=\"fa fa-plus\"></i>\n          {{'new-region' | translate}}\n        </a>\n      </div> -->\n    </div>\n    <div class=\"table-responsive text-center\">\n      <table class=\"table table-bordered main-table\">\n        <tr class=\"bg-dark text-white\">\n          <td>{{'image' | translate}}</td>\n          <td>{{'name' | translate}}</td>\n          <td>{{'city' | translate}}</td>\n          <td>{{'region-name' | translate}}</td>\n          <td>{{'language' | translate}}</td>\n          <td>{{'rating' | translate}}</td>\n          <td>{{'status' | translate}}</td>\n          <td>{{'control' | translate}}</td>\n        </tr>\n        <tr *ngFor=\"let guide of guidesList | paginate: config\">\n          <td><img src=\"{{guide?.image}}\" alt=\"{{guide?.name}} Image\" class=\"img-thumbnail img-custom\"></td>\n          <td>{{guide.name ? guide?.name : '-'}}</td>\n          <td>\n            {{guide?.city.length == 0 ? '-' : null}}\n            <span class=\"m-1 px-1 rounded border border-primary\" *ngFor=\"let city of guide?.city\">{{city}}</span>\n          </td>\n          <td>\n            {{guide?.regions.length == 0 ? '-' : null}}\n            <span class=\"{{region?.name ? 'm-1 px-1 rounded border border-primary' : null}}\" *ngFor=\"let region of guide?.regions\">{{region?.name ? region?.name : null}}</span>\n          </td>\n          <td>\n            {{guide?.language.length == 0 ? '-' : null}}\n            <span class=\"m-1 px-1 rounded bg-grey-blue text-white\" *ngFor=\"let lang of guide?.language\">{{lang}}</span>\n          </td>\n          <td>{{guide?.rating ? guide?.rating : '-'}}</td>\n          <td>{{guide?.status ? (guide?.status | translate) : '-'}}</td>\n          <td>\n            <a routerLink=\"/guides/{{guide?.id}}\" class=\"btn bg-light-blue text-white btn-sm mr-1 mb-1\">\n              {{'view' | translate}}\n            </a>\n            <a routerLink=\"/guides/approve/{{guide?.id}}\" class=\"btn bg-light-blue text-white btn-sm mr-1 mb-1\">\n              {{'approve' | translate}}\n            </a>\n          </td>\n        </tr>\n      </table>\n      <pagination-controls class=\"my-pagination\"\n                           (pageChange)=\"pageChanged($event)\"\n                           autoHide=\"true\"\n                           maxSize=\"5\"\n                           responsive=\"true\"\n                           previousLabel=\"{{'prev' | translate}}\"\n                           nextLabel=\"{{'next' | translate}}\"\n                           screenReaderPaginationLabel=\"Pagination\"\n                           screenReaderPageLabel=\"page\"\n                           screenReaderCurrentLabel=\"{{'you-are-on-page' | translate}}\">\n      </pagination-controls>\n    </div>\n    <!-- </div> -->\n    <!-- </div> -->\n    <!-- <div *ngIf=\"regionsList.length === 0\">\n        <div class=\"container\">\n            <div class=\"alert alert-primary text-center mt-5\">{{'region-not-found' | translate}}</div>\n            <a routerLink=\"/cars/add\" class=\"btn btn-primary btn-sm mb-2 float-right\">\n                <i class=\"fa fa-plus\"></i>\n                {{'add-new-car' | translate}}\n            </a>\n        </div>\n    </div> -->\n  </div>\n  <div *ngIf=\"guides.length == 0\">\n    <div class=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {Guide} from '../../model/guide.model';\nimport {GuideState} from '../../store/guide.reducer';\nimport {Store} from '@ngrx/store';\nimport {ActivatedRoute, ParamMap} from '@angular/router';\nimport {loadGuide} from '../../store/guide.actions';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {getGuideSelector} from '../../store/guide.selector';\nimport {GuideDetails} from '../../model/guide-details';\n\n@Component({\n  selector: 'app-guide-details',\n  templateUrl: './guide-details.component.html',\n  styleUrls: ['./guide-details.component.scss']\n})\nexport class GuideDetailsComponent implements OnInit {\n  guide: GuideDetails;\n  guideOrdersList: any[] = [];\n  config: any;\n\n  constructor(private store: Store<GuideState>,\n              private activatedRoute: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.activatedRoute.paramMap.subscribe(\n      (params: ParamMap) => {\n        this.store.dispatch(loadGuide({id: params.get('id')}));\n      });\n    this.getGuideDetails();\n  }\n\n  getGuideDetails() {\n    this.store.select(getGuideSelector).subscribe(\n      data => {\n        if (data) {\n          console.log('data: ', data);\n          this.guide = data;\n          this.guideOrdersList = data?.myOrders;\n          this.config = {\n            itemsPerPage: 5,\n            currentPage: 1,\n            totalItems: this.guideOrdersList.length\n          };\n        }\n      }\n    );\n  }\n\n  pageChanged(event) {\n    this.config.currentPage = event;\n  }\n\n}\n","<div class=\"guide-details\" *ngIf=\"guide\">\r\n  <div class=\"container\">\r\n    <h1 class=\"my-3 details-title\">{{'guide-details-page' | translate}}</h1>\r\n    <div class=\"row\">\r\n      <div class=\"col-12 col-sm-5 col-md-4 position-relative mx-auto text-center mb-3\">\r\n        <div class=\"image-details mb-3\">\r\n          <img class=\"img-fluid img-thumbnail\" src=\"{{guide?.image}}\" alt=\"{{guide?.name}} Image\" />\r\n        </div>\r\n<!--        <div class=\"row w-100 mx-auto\" *ngIf=\"guide.images.length != 0\">-->\r\n<!--          <div class=\"col-4 mx-auto px-0 mb-1\" *ngFor=\"let img of guide.images; let i = index\">-->\r\n<!--            <div #secondImageDetails class=\"second-images-details\"  (click)=\"viewImage(secondImageDetails)\">-->\r\n<!--              <img (load)=\"checkSecondImagesloaded(i)\" class=\"img-responsive\" src=\"{{img?.image}}\" (error)=\"img.image = '../../../../../assets/default-Item.jpg'\" alt=\"Second Images\" />-->\r\n<!--            </div>-->\r\n<!--          </div>-->\r\n<!--        </div>-->\r\n<!--        <div class=\"overlay\" *ngIf=\"rendering\">-->\r\n<!--          <div class=\"overlay-lds-ring\"><div></div><div></div><div></div><div></div></div>-->\r\n<!--        </div>-->\r\n      </div>\r\n      <div class=\"col-12 col-sm-6 mx-auto\">\r\n        <div class=\"info-details\">\r\n          <ul class=\"list-unstyled\">\r\n            <li>\r\n              <div class=\"row\">\r\n                <div class=\"col\">\r\n                  <h4 class=\"text-info\">{{guide?.name}}</h4>\r\n                </div>\r\n                <div *ngIf=\"guide?.status\" class=\"col align-self-center text-right\">\r\n                  <span class=\"status border border-secondary rounded py-1 px-2\">{{guide?.status | translate}}</span>\r\n                </div>\r\n              </div>\r\n            </li>\r\n<!--            <li class=\"my-2\">-->\r\n<!--              <div class=\"row\">-->\r\n<!--                <div class=\"col-4 col-xl-3 text-center\">-->\r\n<!--                  <img class=\"img-fluid img-thumbnail\" src=\"{{guide?.userImage}}\" (error)=\"guide.userImage = '../../../../../assets/default-avatar.jpg'\" alt=\"{{guide?.username}} Image\" />-->\r\n<!--                </div>-->\r\n<!--                <div class=\"col-7 align-self-center\">-->\r\n<!--                  <h4 class=\"mb-2 text-secondary\">{{guide?.username}}</h4>-->\r\n<!--                </div>-->\r\n<!--              </div>-->\r\n<!--            </li>-->\r\n<!--              myOrders: [-->\r\n<!--                {-->\r\n\r\n<!--              }-->\r\n<!--              ];-->\r\n            <li class=\"mb-2\" *ngIf=\"guide?.language\">\r\n              <p>{{'language' | translate }} :\r\n                <span class=\"m-1 px-1 rounded bg-grey-blue text-white\" *ngFor=\"let lang of guide?.language\">{{lang}}</span>\r\n              </p>\r\n            </li>\r\n            <li class=\"mb-2\" *ngIf=\"guide?.city\">\r\n              <p>{{'city' | translate }} :\r\n                <span class=\"m-1 px-1 rounded border border-primary\" *ngFor=\"let city of guide?.city\">{{city}}</span>\r\n              </p>\r\n            </li>\r\n<!--            <li *ngIf=\"guide?.regions\">-->\r\n<!--              <p class=\"mb-2\">{{'regions' | translate }} :-->\r\n<!--                <span class=\"{{region?.name ? 'm-1 px-1 rounded border border-primary' : null}}\" *ngFor=\"let region of guide?.regions\">{{region?.name ? region?.name : null}}</span>-->\r\n<!--              </p>-->\r\n<!--            </li>-->\r\n            <li class=\"mb-2\" *ngIf=\"guide?.rating\"><p>{{'rating' | translate }} : <span class=\"text-secondary\">{{guide?.rating}}</span></p></li>\r\n          </ul>\r\n        </div><!--.info-details-->\r\n      </div><!--.col-12-->\r\n      <div class=\"col-12\">\r\n        <hr class=\"w-50 mx-auto\">\r\n      </div>\r\n      <div class=\"col-12\" *ngIf=\"guideOrdersList.length > 0\">\r\n        <h3 class=\"\">{{'my-orders' | translate}} :</h3>\r\n      </div>\r\n      <div class=\"col-12 mx-auto\" *ngIf=\"guideOrdersList.length > 0\">\r\n        <div class=\"table-responsive text-center\">\r\n          <table class=\"table table-bordered main-table\">\r\n            <tr class=\"bg-dark text-white\">\r\n              <td>{{'city' | translate}}</td>\r\n              <td>{{'cost' | translate}}</td>\r\n              <td>{{'language' | translate}}</td>\r\n              <td>{{'services' | translate}}</td>\r\n              <td>{{'status' | translate}}</td>\r\n              <td>{{'arrive-date' | translate}}</td>\r\n              <td>{{'date' | translate}}</td>\r\n              <td>{{'leave-date' | translate}}</td>\r\n            </tr>\r\n            <tr *ngFor=\"let order of guideOrdersList | paginate: config\">\r\n              <td>{{order.city ? order?.city : '-'}}</td>\r\n              <td>{{order.cost ? order?.cost : '-'}}</td>\r\n              <td>{{order.language ? order?.language : '-'}}</td>\r\n              <td>\r\n                {{order?.services.length == 0 ? '-' : null}}\r\n                <span class=\"m-1 px-1 rounded border border-primary\" *ngFor=\"let service of order?.services\">{{service}}</span>\r\n              </td>\r\n              <td>{{order?.status ? (order?.status | translate) : '-'}}</td>\r\n              <td>{{order?.arriveDate ? (order?.arriveDate.timestamp * 1000 | date: 'yyyy-MM-dd') : '-'}}</td>\r\n              <td>{{order?.date ? (order?.date.timestamp * 1000 | date: 'yyyy-MM-dd') : '-'}}</td>\r\n              <td>{{order?.leaveDate ? (order?.leaveDate.timestamp * 1000 | date: 'yyyy-MM-dd') : '-'}}</td>\r\n            </tr>\r\n          </table>\r\n          <pagination-controls class=\"my-pagination\"\r\n                               (pageChange)=\"pageChanged($event)\"\r\n                               autoHide=\"true\"\r\n                               maxSize=\"5\"\r\n                               responsive=\"true\"\r\n                               previousLabel=\"{{'prev' | translate}}\"\r\n                               nextLabel=\"{{'next' | translate}}\"\r\n                               screenReaderPaginationLabel=\"Pagination\"\r\n                               screenReaderPageLabel=\"page\"\r\n                               screenReaderCurrentLabel=\"{{'you-are-on-page' | translate}}\">\r\n          </pagination-controls>\r\n        </div>\r\n      </div>\r\n      <!--.col-12-->\r\n\r\n    </div><!--.row-->\r\n  </div>\r\n</div>\r\n<div *ngIf=\"!guide\">\r\n  <div class=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Store} from '@ngrx/store';\nimport {GuideState} from '../../store/guide.reducer';\nimport {ToastrService} from 'ngx-toastr';\nimport {ActivatedRoute, ParamMap} from '@angular/router';\nimport {loadGuide, updateGuide} from '../../store/guide.actions';\nimport {getGuideSelector} from '../../store/guide.selector';\nimport {Guide} from '../../model/guide.model';\n\n@Component({\n  selector: 'app-update-guide',\n  templateUrl: './update-guide.component.html',\n  styleUrls: ['./update-guide.component.scss']\n})\nexport class UpdateGuideComponent implements OnInit {\n  updateGuideFrom: FormGroup;\n  guide: Guide;\n  guideId: string;\n  constructor(private store: Store<GuideState>,\n              private activatedRoute: ActivatedRoute,\n              private toaster: ToastrService) { }\n\n  ngOnInit(): void {\n    this.activatedRoute.paramMap.subscribe(\n      (params: ParamMap) => {\n        this.guideId = params.get('id');\n        this.store.dispatch(loadGuide({id: this.guideId}));\n      });\n\n    this.updateGuideFrom = new FormGroup({\n      id: new FormControl(''),\n      status: new FormControl('', Validators.required),\n      cost: new FormControl('', Validators.required),\n    });\n    this.getGuideById();\n  }\n\n  getGuideById() {\n    this.store.select(getGuideSelector).subscribe(\n      response => {\n        if (response) {\n          console.log('respones : ', response);\n          this.guide = response;\n          this.fillGuideForm(response);\n        }\n      }\n    );\n  }\n\n  fillGuideForm(data: Guide) {\n    this.updateGuideFrom = new FormGroup({\n      id: new FormControl(data.id),\n      status: new FormControl(data.status, Validators.required),\n      cost: new FormControl('', Validators.required),\n    });\n  }\n\n  onSubmit() {\n    if (!this.updateGuideFrom.valid) {\n      this.toaster.error('Form Not Valid !');\n      return;\n    }\n    const formObject = this.updateGuideFrom.getRawValue();\n    formObject.id = this.guideId;\n    console.log(formObject);\n    this.store.dispatch(updateGuide({id: formObject.id, status: formObject.status, cost: formObject.cost}));\n  }\n}\n","<!-- general form elements -->\r\n<div class=\"container-fluid\" *ngIf=\"guide != null\">\r\n  <div class=\"content-header\">\r\n    <h1 class=\"text-center mt-5 mb-3\">{{'approve-guide-page' | translate}}</h1>\r\n  </div>\r\n  <div class=\"card card-info mb-5\">\r\n    <div class=\"card-header bg-light-blue text-white p-3\">\r\n      <!-- <h3 class=\"card-title mb-0\">{{'new-event' | translate}}</h3> -->\r\n    </div>\r\n    <!-- /.card-header -->\r\n    <!-- form start -->\r\n    <form [formGroup]=\"updateGuideFrom\" (ngSubmit)=\"onSubmit()\">\r\n      <div class=\"card-body\">\r\n        <div class=\"form-group\">\r\n          <label class=\"col-form-label\" for=\"inputStatusSuccess\">{{'status' | translate}}</label>\r\n          <select class=\"form-control\"\r\n                  name=\"status\"\r\n                  formControlName=\"status\">\r\n            <option value=\"\">{{'select-status-placeholder' | translate}}</option>\r\n            <option value=\"approved\" [selected]=\"guide.status == 'approved'\">{{'approved' | translate}}</option>\r\n            <option value=\"not-approved\" [selected]=\"guide.status == 'not-approved'\">{{'not-approved' | translate}}</option>\r\n          </select>\r\n          <span class=\"invalid-feedback\" *ngIf=\"updateGuideFrom.get('status').errors?.required\">{{'status-field-required' | translate}}</span>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"exampleInputcost\">{{'cost' | translate}}</label>\r\n          <input type=\"number\"\r\n                 [ngClass]=\"{'is-invalid': updateGuideFrom.get('cost').errors &&\r\n                           (updateGuideFrom.get('cost').touched || updateGuideFrom.get('cost').dirty)}\"\r\n                 name=\"cost\"\r\n                 formControlName=\"cost\"\r\n                 id=\"exampleInputcost\"\r\n                 class=\"form-control\"\r\n                 placeholder=\"{{'cost-type-placeholder' | translate}}\">\r\n          <span class=\"invalid-feedback\" *ngIf=\"updateGuideFrom.get('cost').errors?.required\">{{'cost-field-is-required' | translate}}</span>\r\n        </div>\r\n      </div>\r\n      <!-- /.card-body -->\r\n\r\n      <div class=\"card-footer\">\r\n        <button type=\"submit\" class=\"btn bg-light-blue text-white\" [disabled]=\"updateGuideFrom.invalid\">{{'update' | translate}}</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  <!-- /.card -->\r\n</div>\r\n<div *ngIf=\"guide == null\">\r\n  <div class=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {AllGuidesComponent} from './components/all-guides/all-guides.component';\nimport {UpdateGuideComponent} from './components/update-guide/update-guide.component';\nimport {GuideDetailsComponent} from './components/guide-details/guide-details.component';\n\n\nconst routes: Routes = [\n  { path: '', component: AllGuidesComponent },\n  { path: ':id', component: GuideDetailsComponent },\n  { path: 'approve/:id', component: UpdateGuideComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class GuidesRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport {ThemeModule} from '../../@theme/theme.module';\n\nimport { GuidesRoutingModule } from './guides-routing.module';\nimport { AllGuidesComponent } from './components/all-guides/all-guides.component';\nimport { StoreModule } from '@ngrx/store';\nimport * as fromGuide from './store/guide.reducer';\nimport { EffectsModule } from '@ngrx/effects';\nimport { GuideEffects } from './store/guide.effects';\nimport { UpdateGuideComponent } from './components/update-guide/update-guide.component';\nimport { GuideDetailsComponent } from './components/guide-details/guide-details.component';\n\n\n@NgModule({\n  declarations: [AllGuidesComponent, UpdateGuideComponent, GuideDetailsComponent],\n  imports: [\n    ThemeModule,\n    GuidesRoutingModule,\n    StoreModule.forFeature(fromGuide.guidesFeatureKey, fromGuide.reducer),\n    EffectsModule.forFeature([GuideEffects])\n  ]\n})\nexport class GuidesModule { }\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {GuidesResponse} from '../model/guides-response';\nimport {AdminConfig} from '../../AdminConfig';\nimport {GuideResponse} from '../model/guide-response';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GuidesService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  getAllGuides(): Observable<GuidesResponse> {\n    return this.httpClient.get<GuidesResponse>(AdminConfig.guidesAPI);\n  }\n\n  getGuideById(guideId: string): Observable<GuideResponse> {\n    return this.httpClient.get<GuideResponse>(`${AdminConfig.guideByIdAPI}/${guideId}`);\n  }\n\n  updateGuideStatus(id: string, status: string, cost: string): Observable<any> {\n    const data = {\n      id,\n      status,\n      cost\n    };\n    return this.httpClient.put<any>(AdminConfig.updateGuideAPI, data);\n  }\n\n}\n","import { createAction, props } from '@ngrx/store';\nimport { Update } from '@ngrx/entity';\n\nimport { Guide } from '../model/guide.model';\nimport {GuideDetails} from '../model/guide-details';\n\nexport const loadGuides = createAction(\n  '[Guide/API] Load Guides'\n);\n\nexport const loadGuidesSuccess = createAction(\n  '[Guide/API] Load Guides Success',\n  props<{ Data: Guide[] }>()\n);\n\nexport const loadGuidesFailure = createAction(\n  '[Guide/API] Load Guides Failure',\n  props<{ error: string }>()\n);\n\nexport const loadGuide = createAction(\n  '[Guide/API] Load Guide',\n  props<{ id: string }>()\n);\n\nexport const loadGuideSuccess = createAction(\n  '[Guide/API] Load Guide Success',\n  props<{ guide: GuideDetails }>()\n);\n\nexport const loadGuideFailure = createAction(\n  '[Guide/API] Load Guide Failure',\n  props<{ error: string }>()\n);\n\nexport const updateGuide = createAction(\n  '[Guide/API] Update Guide',\n  props<{ id: string, status: string, cost: string }>()\n);\n\n\nexport const updateGuideSuccess = createAction(\n  '[Guide/API] Update Guide Success'\n);\n\n\nexport const updateGuideFailure = createAction(\n  '[Guide/API] Update Guide Failure',\n  props<{ error: string }>()\n);\n\n\nexport const addGuide = createAction(\n  '[Guide/API] Add Guide',\n  props<{ guide: Guide }>()\n);\n\nexport const upsertGuide = createAction(\n  '[Guide/API] Upsert Guide',\n  props<{ guide: Guide }>()\n);\n\nexport const addGuides = createAction(\n  '[Guide/API] Add Guides',\n  props<{ guides: Guide[] }>()\n);\n\nexport const upsertGuides = createAction(\n  '[Guide/API] Upsert Guides',\n  props<{ guides: Guide[] }>()\n);\n\nexport const updateGuides = createAction(\n  '[Guide/API] Update Guides',\n  props<{ guides: Update<Guide>[] }>()\n);\n\nexport const deleteGuide = createAction(\n  '[Guide/API] Delete Guide',\n  props<{ id: string }>()\n);\n\nexport const deleteGuides = createAction(\n  '[Guide/API] Delete Guides',\n  props<{ ids: string[] }>()\n);\n\nexport const clearGuides = createAction(\n  '[Guide/API] Clear Guides'\n);\n","import { Injectable } from '@angular/core';\nimport {Actions, createEffect, ofType} from '@ngrx/effects';\nimport {GuidesService} from '../services/guides.service';\nimport * as guideActions from './guide.actions';\nimport {catchError, exhaustMap, map, mergeMap, tap} from 'rxjs/operators';\nimport {of} from 'rxjs';\nimport {ToastrService} from 'ngx-toastr';\nimport {ActivatedRoute, Router} from '@angular/router';\n\n\n@Injectable()\nexport class GuideEffects {\n\n\n\n  constructor(private actions$: Actions,\n              private guidesService: GuidesService,\n              private toaster: ToastrService,\n              private router: Router,\n              private activatedRoute: ActivatedRoute) {}\n\n  loadGuides$ = createEffect(() => this.actions$.pipe(\n    ofType(guideActions.loadGuides),\n    mergeMap(() => this.guidesService.getAllGuides()\n      .pipe(\n        map(response => {\n          console.log(response);\n          return guideActions.loadGuidesSuccess({Data: response.Data});\n        }),\n        catchError(error => of(guideActions.loadGuidesFailure({error})))\n      ))\n  ));\n\n  loadGuide$ = createEffect(() => this.actions$.pipe(\n    ofType(guideActions.loadGuide),\n    mergeMap(action => this.guidesService.getGuideById(action.id)\n      .pipe(\n        map(response => guideActions.loadGuideSuccess({guide: response.Data})),\n        catchError(error => of(guideActions.loadGuidesFailure({error})))\n      ))\n  ));\n\n  approveGuide$ = createEffect(() => this.actions$.pipe(\n    ofType(guideActions.updateGuide),\n    exhaustMap(action => this.guidesService.updateGuideStatus(action.id, action.status, action.cost)\n      .pipe(\n        map(response => {\n          console.log('effect response : ', response);\n          this.toaster.success(response.msg);\n          return guideActions.updateGuideSuccess();\n        }),\n        catchError(error => {\n          console.log('error effect : ', error);\n          return of(guideActions.updateGuideFailure({error}));\n        })\n      ))\n  ));\n\n  redirectAfterUpdateGuide$ = createEffect(() => this.actions$.pipe(\n    ofType(guideActions.updateGuideSuccess),\n    tap(() => this.router.navigate(['guides']))\n  ), { dispatch: false });\n}\n","import { Action, createReducer, on } from '@ngrx/store';\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\nimport { Guide } from '../model/guide.model';\nimport * as GuideActions from './guide.actions';\nimport {GuideDetails} from '../model/guide-details';\n\nexport const guidesFeatureKey = 'guides';\n\nexport interface GuideState extends EntityState<Guide> {\n  // additional entities state properties\n  Data: Guide[];\n  guide: GuideDetails;\n  error: string;\n}\n\nexport const adapter: EntityAdapter<Guide> = createEntityAdapter<Guide>();\n\nexport const initialState: GuideState = adapter.getInitialState({\n  // additional entity state properties\n  Data: undefined,\n  guide: undefined,\n  error: undefined\n});\n\n\nexport const reducer = createReducer(\n  initialState,\n  on(GuideActions.loadGuidesSuccess,\n    (state, action) => adapter.setAll(action.Data, state)\n  ),\n  on(GuideActions.loadGuidesFailure,\n    (state, action) => {\n      return {\n        ...state,\n        error: action.error\n      };\n    }\n  ),\n  on(GuideActions.loadGuideSuccess,\n    (state, action) => {\n      return {\n        ...state,\n        guide: action.guide\n      };\n    }\n  ),\n  on(GuideActions.loadGuideFailure,\n    (state, action) => {\n      return {\n        ...state,\n        error: action.error\n      };\n    }\n  ),\n  on(GuideActions.addGuide,\n    (state, action) => adapter.addOne(action.guide, state)\n  ),\n  on(GuideActions.upsertGuide,\n    (state, action) => adapter.upsertOne(action.guide, state)\n  ),\n  on(GuideActions.addGuides,\n    (state, action) => adapter.addMany(action.guides, state)\n  ),\n  on(GuideActions.upsertGuides,\n    (state, action) => adapter.upsertMany(action.guides, state)\n  ),\n  on(GuideActions.updateGuides,\n    (state, action) => adapter.updateMany(action.guides, state)\n  ),\n  on(GuideActions.deleteGuide,\n    (state, action) => adapter.removeOne(action.id, state)\n  ),\n  on(GuideActions.deleteGuides,\n    (state, action) => adapter.removeMany(action.ids, state)\n  ),\n  on(GuideActions.clearGuides,\n    state => adapter.removeAll(state)\n  ),\n);\n\n\nexport const {\n  selectIds,\n  selectEntities,\n  selectAll,\n  selectTotal,\n} = adapter.getSelectors();\n","import {createFeatureSelector, createSelector} from '@ngrx/store';\r\nimport {guidesFeatureKey, GuideState, selectAll} from './guide.reducer';\r\n\r\nconst guideFeatureState = createFeatureSelector(guidesFeatureKey);\r\n\r\nexport const getAllGuidesSelector = createSelector(guideFeatureState, selectAll);\r\n\r\nexport const getGuideSelector = createSelector(guideFeatureState, (state: GuideState) => state.guide);\r\n"],"sourceRoot":"webpack:///"}