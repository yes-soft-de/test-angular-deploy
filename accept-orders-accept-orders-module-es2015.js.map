{"version":3,"sources":["./src/app/pages/accept-orders/accept-orders-routing.module.ts","./src/app/pages/accept-orders/accept-orders.module.ts","./src/app/pages/accept-orders/components/all-accept-orders/all-accept-orders.component.ts","./src/app/pages/accept-orders/components/all-accept-orders/all-accept-orders.component.html","./src/app/pages/accept-orders/components/all-unaccept-orders/all-unaccept-orders.component.ts","./src/app/pages/accept-orders/components/all-unaccept-orders/all-unaccept-orders.component.html","./src/app/pages/accept-orders/services/accept-orders.service.ts","./src/app/pages/accept-orders/store/accept-order-selector.ts","./src/app/pages/accept-orders/store/accept-order.actions.ts","./src/app/pages/accept-orders/store/accept-order.effects.ts","./src/app/pages/accept-orders/store/accept-order.reducer.ts"],"names":[],"mappings":"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","file":"accept-orders-accept-orders-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {AllAcceptOrdersComponent} from './components/all-accept-orders/all-accept-orders.component';\nimport {AllUnAcceptOrdersComponent} from './components/all-unaccept-orders/all-unaccept-orders.component';\n\n\nconst routes: Routes = [\n  { path: 'accepted', component: AllAcceptOrdersComponent },\n  { path: 'unaccepted', component: AllUnAcceptOrdersComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AcceptOrdersRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AcceptOrdersRoutingModule } from './accept-orders-routing.module';\nimport { AllAcceptOrdersComponent } from './components/all-accept-orders/all-accept-orders.component';\nimport { EffectsModule } from '@ngrx/effects';\nimport { AcceptOrderEffects } from './store/accept-order.effects';\nimport {StoreModule} from '@ngrx/store';\nimport * as fromAcceptOrders from './store/accept-order.reducer';\nimport {ThemeModule} from '../../@theme/theme.module';\nimport {AllUnAcceptOrdersComponent} from './components/all-unaccept-orders/all-unaccept-orders.component';\n\n\n@NgModule({\n  declarations: [AllAcceptOrdersComponent, AllUnAcceptOrdersComponent],\n  imports: [\n    ThemeModule,\n    AcceptOrdersRoutingModule,\n    StoreModule.forFeature(fromAcceptOrders.acceptOrdersFeatureKey, fromAcceptOrders.reducer),\n    EffectsModule.forFeature([AcceptOrderEffects])\n  ]\n})\nexport class AcceptOrdersModule { }\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Store} from '@ngrx/store';\nimport {OrdersState} from '../../store/accept-order.reducer';\nimport {loadAcceptOrders} from '../../store/accept-order.actions';\nimport {getAcceptOrdersSelector} from '../../store/accept-order-selector';\nimport {Subscription} from 'rxjs';\nimport {AcceptOrder} from '../../model/accept-order.model';\n\n@Component({\n  selector: 'app-all-accept-orders',\n  templateUrl: './all-accept-orders.component.html',\n  styleUrls: ['./all-accept-orders.component.scss']\n})\nexport class AllAcceptOrdersComponent implements OnInit, OnDestroy {\n  acceptOrders: AcceptOrder[];\n  acceptOrdersList: AcceptOrder[] = [];\n  name: any;\n  config: any;\n  isDeleted: boolean;\n  acceptOrdersSubscription: Subscription;\n\n\n  constructor(private store: Store<OrdersState>) { }\n\n  ngOnInit(): void {\n    this.store.dispatch(loadAcceptOrders());\n    this.getAcceptedOrders();\n  }\n\n  getAcceptedOrders() {\n    this.acceptOrdersSubscription = this.store.select(getAcceptOrdersSelector).subscribe(\n      data => {\n        if (data) {\n          console.log('data', data);\n          this.acceptOrders = data;\n          this.acceptOrdersList = data;\n          this.config = {\n            itemsPerPage: 5,\n            currentPage: 1,\n            totalItems: this.acceptOrdersList.length\n          };\n        }\n      });\n\n  }\n\n  // Fetch The Page Number On Page Change\n  pageChanged(event) {\n    this.config.currentPage = event;\n  }\n\n  applyFilter() {\n    // if the search input value is empty\n    if (!this.name) {\n      this.acceptOrdersList = [...this.acceptOrders];\n    } else {\n      this.acceptOrdersList = [];\n      this.acceptOrdersList = this.acceptOrders.filter(res => {\n        if (res.guideName) {\n          const guideName = res.guideName.toLocaleLowerCase().match(this.name.toLocaleLowerCase());\n          if (guideName) {\n            return guideName;\n          }\n        }\n        if (res.touristName) {\n          const touristName = res.touristName.toLocaleLowerCase().match(this.name.toLocaleLowerCase());\n          if (touristName) {\n            return touristName;\n          }\n        }\n        if (res.order.city) {\n          const city = res.order.city.toLocaleLowerCase().match(this.name.toLocaleLowerCase());\n          if (city) {\n            return city;\n          }\n        }\n        if (res.order.status) {\n          const status = res.order.status.toLocaleLowerCase().match(this.name.toLocaleLowerCase());\n          if (status) {\n            return status;\n          }\n        }\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    this.acceptOrdersSubscription.unsubscribe();\n  }\n\n\n}\n","  <div *ngIf=\"acceptOrders\">\n  <!-- <div *ngIf=\"eventsList.length !== 0\"> -->\n  <!-- <div class=\"container-fluid\"> -->\n  <h1 class=\"text-center details-title my-4\">{{'manage-accept-orders-page' | translate}}</h1>\n  <div class=\"row\">\n    <div class=\"col-10 col-sm-8 col-md-6 col-xl-4\">\n      <div class=\"form-group mb-4\">\n        <input\n          id=\"exampleFormControlInput2\"\n          [(ngModel)]=\"name\"\n          (keyup)=\"applyFilter()\"\n          type=\"text\"\n          placeholder=\"{{'accept-order-search-input' | translate}}\"\n          title=\"{{'accept-order-search-input' | translate}}\"\n          class=\"form-control form-control-underlined border-primary search-input\">\n      </div>\n    </div>\n    <!-- <div class=\"col-5 col-md-6 col-xl-8 align-self-center\">\n      <a class=\"btn btn-primary btn-sm mb-2 float-right\" routerLink=\"/events/add\">\n        <i class=\"fa fa-plus\"></i>\n        {{'new-event' | translate}}\n      </a>\n    </div> -->\n  </div>\n  <div class=\"table-responsive text-center\">\n    <table class=\"table table-bordered main-table\">\n      <tr class=\"bg-dark text-white\">\n        <td>{{'guide-name' | translate }}</td>\n        <td>{{'tourist-name' | translate }}</td>\n        <td>{{'services' | translate }}</td>\n        <td>{{'city' | translate }}</td>\n        <td>{{'arrive-date' | translate }}</td>\n        <td>{{'leave-date' | translate }}</td>\n        <!-- <td>{{'status' | translate }}</td> -->\n        <td>{{'cost' | translate }}</td>\n        <td>{{'date' | translate }}</td>\n      </tr>\n      <tr *ngFor=\"let order of acceptOrdersList | paginate: config\">\n        <td>{{order?.guideName ? order?.guideName : '-'}}</td>\n        <td>{{order?.touristName ? order?.touristName : '-'}}</td>\n        <td>\n          {{order?.order?.services.length == 0 ? '-' : null}}\n          <span class=\"m-1 px-1 rounded border border-primary\" *ngFor=\"let service of order?.order?.services\">{{service}}</span>\n        </td>\n        <td>{{order?.order ? order?.order?.city : '-'}}</td>\n        <td>{{order?.order ? (order?.order?.arriveDate?.timestamp * 1000 | date: 'yyyy-MM-dd') : '-'}}</td>\n        <td>{{order?.order ? (order?.order?.leaveDate?.timestamp * 1000 | date: 'yyyy-MM-dd') : '-'}}</td>\n        <!-- <td>{{order?.order ? order?.order?.status : '-'}}</td> -->\n        <td>{{order?.cost ? order?.cost : '-'}}</td>\n        <td style=\"white-space: nowrap;\">{{order?.date ? (order?.date.timestamp * 1000 | date: 'yyyy-MM-dd') : '-'}}</td>\n      </tr>\n    </table>\n    <pagination-controls class=\"my-pagination\"\n                         (pageChange)=\"pageChanged($event)\"\n                         autoHide=\"true\"\n                         maxSize=\"5\"\n                         responsive=\"true\"\n                         previousLabel=\"{{'prev' | translate}}\"\n                         nextLabel=\"{{'next' | translate}}\"\n                         screenReaderPaginationLabel=\"Pagination\"\n                         screenReaderPageLabel=\"page\"\n                         screenReaderCurrentLabel=\"{{'you-are-on-page' | translate}}\">\n    </pagination-controls>\n  </div>\n  <!-- </div> -->\n  <!-- </div> -->\n  <!-- <div *ngIf=\"eventsList.length === 0\">\n      <div class=\"container\">\n          <div class=\"alert alert-primary text-center mt-5\">{{'event-not-found' | translate}}</div>\n          <a routerLink=\"/cars/add\" class=\"btn btn-primary btn-sm mb-2 float-right\">\n              <i class=\"fa fa-plus\"></i>\n              {{'add-new-car' | translate}}\n          </a>\n      </div>\n  </div> -->\n</div>\n<div *ngIf=\"!acceptOrders\">\n  <div class=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\n</div>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Store} from '@ngrx/store';\nimport {OrdersState} from '../../store/accept-order.reducer';\nimport {loadAcceptOrders, loadUnAcceptOrders} from '../../store/accept-order.actions';\nimport {getAcceptOrdersSelector, getUnAcceptOrdersSelector} from '../../store/accept-order-selector';\nimport {Subscription} from 'rxjs';\nimport {AcceptOrder} from '../../model/accept-order.model';\nimport {AcceptOrdersService} from '../../services/accept-orders.service';\nimport {UnAcceptOrder} from '../../model/unaccept-order';\n\n@Component({\n  selector: 'app-all-unaccept-orders',\n  templateUrl: './all-unaccept-orders.component.html',\n  styleUrls: ['./all-unaccept-orders.component.scss']\n})\nexport class AllUnAcceptOrdersComponent implements OnInit, OnDestroy {\n  unAcceptOrders: UnAcceptOrder[];\n  unAcceptOrdersList: UnAcceptOrder[] = [];\n  name: any;\n  config: any;\n  isDeleted: boolean;\n  unAcceptOrdersSubscription: Subscription;\n\n\n  constructor(private store: Store<OrdersState>, private orderSer: AcceptOrdersService) { }\n\n  ngOnInit(): void {\n    this.store.dispatch(loadUnAcceptOrders());\n    this.getUnAcceptedOrders();\n  }\n\n  getUnAcceptedOrders() {\n    this.unAcceptOrdersSubscription = this.store.select(getUnAcceptOrdersSelector).subscribe(\n      data => {\n        if (data) {\n          console.log('un accept orders : ', data);\n          this.unAcceptOrders = data;\n          this.unAcceptOrdersList = data;\n          this.config = {\n            itemsPerPage: 5,\n            currentPage: 1,\n            totalItems: this.unAcceptOrdersList.length\n          };\n        }\n      });\n\n  }\n\n  // Fetch The Page Number On Page Change\n  pageChanged(event) {\n    this.config.currentPage = event;\n  }\n\n  applyFilter() {\n    // if the search input value is empty\n    if (!this.name) {\n      this.unAcceptOrdersList = [...this.unAcceptOrders];\n    } else {\n      this.unAcceptOrdersList = [];\n      this.unAcceptOrdersList = this.unAcceptOrders.filter(res => {\n        if (res.guideName) {\n          const guideName = res.guideName.toLocaleLowerCase().match(this.name.toLocaleLowerCase());\n          if (guideName) {\n            return guideName;\n          }\n        }\n        if (res.touristName) {\n          const touristName = res.touristName.toLocaleLowerCase().match(this.name.toLocaleLowerCase());\n          if (touristName) {\n            return touristName;\n          }\n        }\n        if (res.city) {\n          const city = res.city.toLocaleLowerCase().match(this.name.toLocaleLowerCase());\n          if (city) {\n            return city;\n          }\n        }\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    this.unAcceptOrdersSubscription.unsubscribe();\n  }\n\n\n}\n","  <div *ngIf=\"unAcceptOrders\">\n  <!-- <div *ngIf=\"eventsList.length !== 0\"> -->\n  <!-- <div class=\"container-fluid\"> -->\n  <h1 class=\"text-center details-title my-4\">{{'manage-unaccept-orders-page' | translate}}</h1>\n  <div class=\"row\">\n    <div class=\"col-10 col-sm-8 col-md-6 col-xl-4\">\n      <div class=\"form-group mb-4\">\n        <input\n          id=\"exampleFormControlInput2\"\n          [(ngModel)]=\"name\"\n          (keyup)=\"applyFilter()\"\n          type=\"text\"\n          placeholder=\"{{'unaccept-order-search-input' | translate}}\"\n          title=\"{{'unaccept-order-search-input' | translate}}\"\n          class=\"form-control form-control-underlined border-primary search-input\">\n      </div>\n    </div>\n    <!-- <div class=\"col-5 col-md-6 col-xl-8 align-self-center\">\n      <a class=\"btn btn-primary btn-sm mb-2 float-right\" routerLink=\"/events/add\">\n        <i class=\"fa fa-plus\"></i>\n        {{'new-event' | translate}}\n      </a>\n    </div> -->\n  </div>\n  <div class=\"table-responsive text-center\">\n    <table class=\"table table-bordered main-table\">\n      <tr class=\"bg-dark text-white\">\n        <td>{{'guide-name' | translate }}</td>\n        <td>{{'tourist-name' | translate }}</td>\n        <td>{{'services' | translate }}</td>\n        <td>{{'city' | translate }}</td>\n        <td>{{'arrive-date' | translate }}</td>\n        <td>{{'leave-date' | translate }}</td>\n        <td>{{'cost' | translate }}</td>\n        <td>{{'date' | translate }}</td>\n      </tr>\n      <tr *ngFor=\"let order of unAcceptOrdersList | paginate: config\">\n        <td>{{order?.guideName ? order?.guideName : '-'}}</td>\n        <td>{{order?.touristName ? order?.touristName : '-'}}</td>\n        <td>\n          {{order?.services.length == 0 ? '-' : null}}\n          <span class=\"m-1 px-1 rounded border border-primary\" *ngFor=\"let service of order?.services\">{{service}}</span>\n        </td>\n        <td>{{order?.city ? order?.city : '-'}}</td>\n        <td>{{order?.arriveDate ? (order?.arriveDate?.timestamp * 1000 | date: 'yyyy-MM-dd') : '-'}}</td>\n        <td>{{order?.leaveDate ? (order?.leaveDate?.timestamp * 1000 | date: 'yyyy-MM-dd') : '-'}}</td>\n        <td>{{order?.cost ? (order?.cost | currency) : '-'}}</td>\n        <td style=\"white-space: nowrap;\">{{order?.date ? (order?.date.timestamp * 1000 | date: 'yyyy-MM-dd') : '-'}}</td>\n      </tr>\n    </table>\n    <pagination-controls class=\"my-pagination\"\n                         (pageChange)=\"pageChanged($event)\"\n                         autoHide=\"true\"\n                         maxSize=\"5\"\n                         responsive=\"true\"\n                         previousLabel=\"{{'prev' | translate}}\"\n                         nextLabel=\"{{'next' | translate}}\"\n                         screenReaderPaginationLabel=\"Pagination\"\n                         screenReaderPageLabel=\"page\"\n                         screenReaderCurrentLabel=\"{{'you-are-on-page' | translate}}\">\n    </pagination-controls>\n  </div>\n  <!-- </div> -->\n  <!-- </div> -->\n  <!-- <div *ngIf=\"eventsList.length === 0\">\n      <div class=\"container\">\n          <div class=\"alert alert-primary text-center mt-5\">{{'event-not-found' | translate}}</div>\n          <a routerLink=\"/cars/add\" class=\"btn btn-primary btn-sm mb-2 float-right\">\n              <i class=\"fa fa-plus\"></i>\n              {{'add-new-car' | translate}}\n          </a>\n      </div>\n  </div> -->\n</div>\n<div *ngIf=\"!unAcceptOrders\">\n  <div class=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\n</div>\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {AdminConfig} from '../../AdminConfig';\nimport {AcceptOrdersResponse} from '../model/accept-orders-response';\nimport {UnAcceptOrderResponse} from '../model/unaccept-order-response';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AcceptOrdersService {\n\n  constructor(private httpClient: HttpClient) { }\n\n\n  getAllUnAcceptedOrders(): Observable<UnAcceptOrderResponse> {\n    return this.httpClient.get<UnAcceptOrderResponse>(AdminConfig.allUnacceptedOrdersAPI);\n  }\n\n  getAllAcceptedOrders(status = 'done'): Observable<AcceptOrdersResponse> {\n    return this.httpClient.get<AcceptOrdersResponse>(`${AdminConfig.allAcceptedOrdersAPI}/${status}`);\n  }\n}\n","import {createFeatureSelector, createSelector} from '@ngrx/store';\r\nimport {acceptOrdersFeatureKey, OrdersState, selectAll} from './accept-order.reducer';\r\n\r\nconst acceptOrdersFeatureState = createFeatureSelector(acceptOrdersFeatureKey);\r\n\r\nexport const getAcceptOrdersSelector = createSelector(acceptOrdersFeatureState, (state: OrdersState) => state.acceptOrders);\r\n\r\nexport const getUnAcceptOrdersSelector = createSelector(acceptOrdersFeatureState, (state: OrdersState) => state.unAcceptOrders);\r\n\r\n","import { createAction, props } from '@ngrx/store';\n\nimport { AcceptOrder } from '../model/accept-order.model';\nimport { UnAcceptOrder } from '../model/unaccept-order';\n\nexport const loadUnAcceptOrders = createAction(\n  '[AcceptOrder/API] Load UnAccept Orders'\n);\n\nexport const loadUnAcceptOrdersSuccess = createAction(\n  '[AcceptOrder/API] Load UnAccept Orders Success',\n  props<{ unAcceptOrder: UnAcceptOrder[] }>()\n);\n\nexport const loadUnAcceptOrdersFailure = createAction(\n  '[AcceptOrder/API] Load UnAccept Orders Failure',\n  props<{ error: string }>()\n);\n\nexport const loadAcceptOrders = createAction(\n  '[AcceptOrder/API] Load Accept Orders'\n);\n\nexport const loadAcceptOrdersSuccess = createAction(\n  '[AcceptOrder/API] Load Accept Orders Success',\n  props<{ acceptOrders: AcceptOrder[] }>()\n);\n\nexport const loadAcceptOrdersFailure = createAction(\n  '[AcceptOrder/API] Load Accept Orders Failure',\n  props<{ error: string }>()\n);\n\n","import { Injectable } from '@angular/core';\nimport {Actions, createEffect, ofType} from '@ngrx/effects';\nimport {AcceptOrdersService} from '../services/accept-orders.service';\nimport * as acceptOrderActions from './accept-order.actions';\nimport {catchError, map, switchMap} from 'rxjs/operators';\nimport {of} from 'rxjs';\n\n\n@Injectable()\nexport class AcceptOrderEffects {\n\n\n\n  constructor(private actions$: Actions,\n              private acceptOrdersService: AcceptOrdersService) {}\n\n  loadAcceptOrders$ = createEffect(() => this.actions$.pipe(\n    ofType(acceptOrderActions.loadAcceptOrders),\n    switchMap(() => this.acceptOrdersService.getAllAcceptedOrders()\n      .pipe(\n        map(response => acceptOrderActions.loadAcceptOrdersSuccess({acceptOrders: response.Data})),\n        catchError(error => of(acceptOrderActions.loadAcceptOrdersFailure({error})))\n      ))\n  ));\n\n\n  loadUnAcceptOrders$ = createEffect(() => this.actions$.pipe(\n    ofType(acceptOrderActions.loadUnAcceptOrders),\n    switchMap(() => this.acceptOrdersService.getAllUnAcceptedOrders()\n      .pipe(\n        map(response => acceptOrderActions.loadUnAcceptOrdersSuccess({unAcceptOrder: response.Data})),\n        catchError(error => of(acceptOrderActions.loadUnAcceptOrdersFailure({error})))\n      ))\n  ));\n}\n","import { Action, createReducer, on } from '@ngrx/store';\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\nimport { AcceptOrder } from '../model/accept-order.model';\nimport * as AcceptOrderActions from './accept-order.actions';\nimport {UnAcceptOrder} from '../model/unaccept-order';\n\nexport const acceptOrdersFeatureKey = 'orders';\n\nexport interface OrdersState extends EntityState<AcceptOrder> {\n  // additional entities state properties\n  acceptOrders: AcceptOrder[];\n  unAcceptOrders: UnAcceptOrder[];\n  error: string;\n}\n\nexport const adapter: EntityAdapter<AcceptOrder> = createEntityAdapter<AcceptOrder>();\n\nexport const initialState: OrdersState = adapter.getInitialState({\n  // additional entity state properties\n  acceptOrders: undefined,\n  unAcceptOrders: undefined,\n  error: undefined\n});\n\n\nexport const reducer = createReducer(\n  initialState,\n  on(AcceptOrderActions.loadAcceptOrdersSuccess,\n    (state, action) => {\n      return {\n        ...state,\n        acceptOrders: action.acceptOrders\n      };\n    }\n  ),\n  on(AcceptOrderActions.loadUnAcceptOrdersSuccess,\n    (state, action) => {\n      return {\n        ...state,\n        unAcceptOrders: action.unAcceptOrder\n      };\n    }\n  ),\n);\n\n\nexport const {\n  selectIds,\n  selectEntities,\n  selectAll,\n  selectTotal,\n} = adapter.getSelectors();\n"],"sourceRoot":"webpack:///"}